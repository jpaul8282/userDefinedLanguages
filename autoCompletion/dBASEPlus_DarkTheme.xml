<?xml version="1.0" encoding="Windows-1252" ?>
<!--Keywords, Functions, Methods and their syntax notation and descriptions
are copied from dBASE Plus's Help File.-->
<NotepadPlus>
   <AutoComplete language="dBASEPlus">
       <Environment ignoreCase="no" startFunc="(" stopFunc=")" paramSeparator="," terminal="" additionalWordChar =""/>
<KeyWord name="ALTER&#xa0;TABLE"/>
<KeyWord name="APPEND&#xa0;AUTOMEM"/>
<KeyWord name="APPEND&#xa0;FROM"/>
<KeyWord name="APPEND&#xa0;FROM&#xa0;ARRAY"/>
<KeyWord name="APPEND&#xa0;MEMO"/>
<KeyWord name="CLEAR&#xa0;ALL"/>
<KeyWord name="CLEAR&#xa0;AUTOMEM"/>
<KeyWord name="CLEAR&#xa0;FIELDS"/>
<KeyWord name="CLEAR&#xa0;MEMORY"/>
<KeyWord name="CLEAR&#xa0;PROGRAM"/>
<KeyWord name="CLOSE&#xa0;ALTERNATE"/>
<KeyWord name="CLOSE&#xa0;DATABASES"/>
<KeyWord name="CLOSE&#xa0;INDEXES"/>
<KeyWord name="CLOSE&#xa0;PRINTER"/>
<KeyWord name="CLOSE&#xa0;TABLES"/>
<KeyWord name="COPY&#xa0;BINARY"/>
<KeyWord name="COPY&#xa0;FILE"/>
<KeyWord name="COPY&#xa0;MEMO"/>
<KeyWord name="COPY&#xa0;STRUCTURE"/>
<KeyWord name="COPY&#xa0;STRUCTURE&#xa0;EXTENDED"/>
<KeyWord name="COPY&#xa0;TABLE"/>
<KeyWord name="COPY&#xa0;TO&#xa0;ARRAY"/>
<KeyWord name="CREATE&#xa0;INDEX"/>
<KeyWord name="CREATE&#xa0;SESSION"/>
<KeyWord name="CREATE&#xa0;TABLE"/>
<KeyWord name="CREATE&#xa0;FROM"/>
<KeyWord name="CREATE&#xa0;STRUCTURE&#xa0;EXTENDED"/>
<KeyWord name="DELETE&#xa0;FILE"/>
<KeyWord name="DELETE&#xa0;TABLE"/>
<KeyWord name="DELETE&#xa0;TAG"/>
<KeyWord name="DISPLAY&#xa0;FILES"/>
<KeyWord name="DO&#xa0;CASE"/>
<KeyWord name="DO&#xa0;WHILE"/>
<KeyWord name="DO&#xa0;UNTIL"/>
<KeyWord name="DROP&#xa0;INDEX"/>
<KeyWord name="DROP&#xa0;TABLE"/>
<KeyWord name="GROUP&#xa0;BY"/>
<KeyWord name="LIST&#xa0;FILES"/>
<KeyWord name="LOAD&#xa0;DLL"/>
<KeyWord name="ON&#xa0;ERROR"/>
<KeyWord name="ON&#xa0;NETERROR"/>
<KeyWord name="ON&#xa0;PAGE"/>
<KeyWord name="OPEN&#xa0;DATABASE"/>
<KeyWord name="ORDER&#xa0;BY"/>
<KeyWord name="PLAY&#xa0;SOUND"/>
<KeyWord name="RELEASE&#xa0;AUTOMEM"/>
<KeyWord name="RELEASE&#xa0;CALLBACK"/>
<KeyWord name="RELEASE&#xa0;DLL"/>
<KeyWord name="RELEASE&#xa0;OBJECT"/>
<KeyWord name="RENAME&#xa0;TABLE"/>
<KeyWord name="REPLACE&#xa0;AUTOMEM"/>
<KeyWord name="REPLACE&#xa0;BINARY"/>
<KeyWord name="REPLACE&#xa0;FROM&#xa0;ARRAY"/>
<KeyWord name="REPLACE&#xa0;MEMO"/>
<KeyWord name="REPLACE&#xa0;OLE"/>
<KeyWord name="RESTORE&#xa0;IMAGE"/>
<KeyWord name="SAVE&#xa0;TO"/>
<KeyWord name="SET&#xa0;ALTERNATE"/>
<KeyWord name="SET&#xa0;AUTOSAVE"/>
<KeyWord name="SET&#xa0;CENTURY"/>
<KeyWord name="SET&#xa0;CONSOLE"/>
<KeyWord name="SET&#xa0;CURRENCY"/>
<KeyWord name="SET&#xa0;DATABASE"/>
<KeyWord name="SET&#xa0;DATE"/>
<KeyWord name="SET&#xa0;DATE&#xa0;TO"/>
<KeyWord name="SET&#xa0;DBTYPE"/>
<KeyWord name="SET&#xa0;DECIMALS"/>
<KeyWord name="SET&#xa0;DELETED"/>
<KeyWord name="SET&#xa0;DIRECTORY"/>
<KeyWord name="SET&#xa0;ENCRYPTION"/>
<KeyWord name="SET&#xa0;EPOCH"/>
<KeyWord name="SET&#xa0;ERROR"/>
<KeyWord name="SET&#xa0;EXACT"/>
<KeyWord name="SET&#xa0;EXCLUSIVE"/>
<KeyWord name="SET&#xa0;FIELDS"/>
<KeyWord name="SET&#xa0;FILTER"/>
<KeyWord name="SET&#xa0;FULLPATH"/>
<KeyWord name="SET&#xa0;HEADINGS"/>
<KeyWord name="SET&#xa0;HELP"/>
<KeyWord name="SET&#xa0;HIGHPRECISION"/>
<KeyWord name="SET&#xa0;HOURS"/>
<KeyWord name="SET&#xa0;INDEX"/>
<KeyWord name="SET&#xa0;KEY&#xa0;TO"/>
<KeyWord name="SET&#xa0;LDCHECK"/>
<KeyWord name="SET&#xa0;LDCONVERT"/>
<KeyWord name="SET&#xa0;LOCK"/>
<KeyWord name="SET&#xa0;MARGIN"/>
<KeyWord name="SET&#xa0;MARK"/>
<KeyWord name="SET&#xa0;MEMOWIDTH"/>
<KeyWord name="SET&#xa0;NEAR"/>
<KeyWord name="SET&#xa0;ODOMETER"/>
<KeyWord name="SET&#xa0;ORDER"/>
<KeyWord name="SET&#xa0;PATH"/>
<KeyWord name="SET&#xa0;PCOL"/>
<KeyWord name="SET&#xa0;POINT"/>
<KeyWord name="SET&#xa0;PRECISION"/>
<KeyWord name="SET&#xa0;PRINTER"/>
<KeyWord name="SET&#xa0;PROW"/>
<KeyWord name="SET&#xa0;REFRESH"/>
<KeyWord name="SET&#xa0;RELATION"/>
<KeyWord name="SET&#xa0;REPROCESS"/>
<KeyWord name="SET&#xa0;SAFETY"/>
<KeyWord name="SET&#xa0;SEPARATOR"/>
<KeyWord name="SET&#xa0;SKIP"/>
<KeyWord name="SET&#xa0;SPACE"/>
<KeyWord name="SET&#xa0;TIME"/>
<KeyWord name="SET&#xa0;UNIQUE"/>
<KeyWord name="SET&#xa0;VIEW"/>
<KeyWord name="STORE&#xa0;AUTOMEM"/>
<KeyWord name="UPDATE&#xa0;ON"/>
<KeyWord name="alter&#xa0;table"/>
<KeyWord name="append&#xa0;automem"/>
<KeyWord name="append&#xa0;from"/>
<KeyWord name="append&#xa0;from&#xa0;array"/>
<KeyWord name="append&#xa0;memo"/>
<KeyWord name="clear&#xa0;all"/>
<KeyWord name="clear&#xa0;automem"/>
<KeyWord name="clear&#xa0;fields"/>
<KeyWord name="clear&#xa0;memory"/>
<KeyWord name="clear&#xa0;program"/>
<KeyWord name="close&#xa0;alternate"/>
<KeyWord name="close&#xa0;databases"/>
<KeyWord name="close&#xa0;indexes"/>
<KeyWord name="close&#xa0;printer"/>
<KeyWord name="close&#xa0;tables"/>
<KeyWord name="copy&#xa0;binary"/>
<KeyWord name="copy&#xa0;file"/>
<KeyWord name="copy&#xa0;memo"/>
<KeyWord name="copy&#xa0;structure"/>
<KeyWord name="copy&#xa0;structure&#xa0;extended"/>
<KeyWord name="copy&#xa0;table"/>
<KeyWord name="copy&#xa0;to&#xa0;array"/>
<KeyWord name="create&#xa0;index"/>
<KeyWord name="create&#xa0;session"/>
<KeyWord name="create&#xa0;table"/>
<KeyWord name="create&#xa0;from"/>
<KeyWord name="create&#xa0;structure&#xa0;extended"/>
<KeyWord name="delete&#xa0;file"/>
<KeyWord name="delete&#xa0;table"/>
<KeyWord name="delete&#xa0;tag"/>
<KeyWord name="display&#xa0;files"/>
<KeyWord name="do&#xa0;case"/>
<KeyWord name="do&#xa0;while"/>
<KeyWord name="do&#xa0;until"/>
<KeyWord name="drop&#xa0;index"/>
<KeyWord name="drop&#xa0;table"/>
<KeyWord name="group&#xa0;by"/>
<KeyWord name="list&#xa0;files"/>
<KeyWord name="load&#xa0;dll"/>
<KeyWord name="on&#xa0;error"/>
<KeyWord name="on&#xa0;neterror"/>
<KeyWord name="on&#xa0;page"/>
<KeyWord name="open&#xa0;database"/>
<KeyWord name="order&#xa0;by"/>
<KeyWord name="play&#xa0;sound"/>
<KeyWord name="release&#xa0;automem"/>
<KeyWord name="release&#xa0;callback"/>
<KeyWord name="release&#xa0;dll"/>
<KeyWord name="release&#xa0;object"/>
<KeyWord name="rename&#xa0;table"/>
<KeyWord name="replace&#xa0;automem"/>
<KeyWord name="replace&#xa0;binary"/>
<KeyWord name="replace&#xa0;from&#xa0;array"/>
<KeyWord name="replace&#xa0;memo"/>
<KeyWord name="replace&#xa0;ole"/>
<KeyWord name="restore&#xa0;image"/>
<KeyWord name="save&#xa0;to"/>
<KeyWord name="set&#xa0;alternate"/>
<KeyWord name="set&#xa0;autosave"/>
<KeyWord name="set&#xa0;century"/>
<KeyWord name="set&#xa0;console"/>
<KeyWord name="set&#xa0;currency"/>
<KeyWord name="set&#xa0;database"/>
<KeyWord name="set&#xa0;date"/>
<KeyWord name="set&#xa0;date&#xa0;to"/>
<KeyWord name="set&#xa0;dbtype"/>
<KeyWord name="set&#xa0;decimals"/>
<KeyWord name="set&#xa0;deleted"/>
<KeyWord name="set&#xa0;directory"/>
<KeyWord name="set&#xa0;encryption"/>
<KeyWord name="set&#xa0;epoch"/>
<KeyWord name="set&#xa0;error"/>
<KeyWord name="set&#xa0;exact"/>
<KeyWord name="set&#xa0;exclusive"/>
<KeyWord name="set&#xa0;fields"/>
<KeyWord name="set&#xa0;filter"/>
<KeyWord name="set&#xa0;fullpath"/>
<KeyWord name="set&#xa0;headings"/>
<KeyWord name="set&#xa0;help"/>
<KeyWord name="set&#xa0;highprecision"/>
<KeyWord name="set&#xa0;hours"/>
<KeyWord name="set&#xa0;index"/>
<KeyWord name="set&#xa0;key&#xa0;to"/>
<KeyWord name="set&#xa0;ldcheck"/>
<KeyWord name="set&#xa0;ldconvert"/>
<KeyWord name="set&#xa0;lock"/>
<KeyWord name="set&#xa0;margin"/>
<KeyWord name="set&#xa0;mark"/>
<KeyWord name="set&#xa0;memowidth"/>
<KeyWord name="set&#xa0;near"/>
<KeyWord name="set&#xa0;odometer"/>
<KeyWord name="set&#xa0;order"/>
<KeyWord name="set&#xa0;path"/>
<KeyWord name="set&#xa0;pcol"/>
<KeyWord name="set&#xa0;point"/>
<KeyWord name="set&#xa0;precision"/>
<KeyWord name="set&#xa0;printer"/>
<KeyWord name="set&#xa0;prow"/>
<KeyWord name="set&#xa0;refresh"/>
<KeyWord name="set&#xa0;relation"/>
<KeyWord name="set&#xa0;reprocess"/>
<KeyWord name="set&#xa0;safety"/>
<KeyWord name="set&#xa0;separator"/>
<KeyWord name="set&#xa0;skip"/>
<KeyWord name="set&#xa0;space"/>
<KeyWord name="set&#xa0;time"/>
<KeyWord name="set&#xa0;unique"/>
<KeyWord name="set&#xa0;view"/>
<KeyWord name="store&#xa0;automem"/>
<KeyWord name="update&#xa0;on"/>
<KeyWord name="ABS" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the absolute value of a specified number.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ACCESS" func="yes">
	<Overload retVal="{accessLevelN}" descr="Miscellaneous Language Elements - 
		Returns the access level of the current user for DBF table security.">
	</Overload>
</KeyWord>
<KeyWord name="ACOPY" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Copies elements from one array to another. Returns the number of elements copied.">
		<Param name="&lt;source array&gt;" />
		<Param name="&lt;target array&gt;" />
		<Param name="[&lt;starting element expN&gt;"/>
		<Param name="[&lt;elements expN&gt;"/>
		<Param name="[&lt;target element expN&gt;]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="ACOS" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse cosine (arccosine) of a number.">
		<Param name="&lt;value expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ADEL" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Deletes an element from a one-dimensional array, or deletes a row or column of 
	elements from a two-dimensional array. Returns 1 if successful, an error if unsuccessful.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;position expN&gt;"/>
		<Param name="[&lt;row/column expN&gt;])"/>
	</Overload>
</KeyWord>
<KeyWord name="ADIR" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Stores to a declared array five characteristics of specified files: name, size, date stamp, time stamp,
	and attribute(s). Returns the number of files whose characteristics are stored.">
		<Param name="&lt;array name&gt;"/>
		<Param name="[&lt;filename skeleton expC&gt;"/>
		<Param name="[&lt;file attribute list expC&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="ADIREXT" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		On a Windows® 95/98/2000/NTsystem, stores to a declared array nine characteristics of specified files:
	name, size, date stamp,	time stamp, attribute(s), alias, creation date, creation time, and last access date. 
	Returns the number of files whose characteristics are stored.">
		<Param name="&lt;array name&gt;"/>
		<Param name="[&lt;filename skeleton expC&gt;"/>
		<Param name="[&lt;file attribute list expC&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="AELEMENT" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Returns the number of a specified element in a one- or two-dimensional array.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;subscript1 expN&gt;"/>
		<Param name="[&lt;subscript2 expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="AFIELDS" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Stores the current table's structural information to a declared array and returns the number of fields
	whose characteristics are stored.">
		<Param name="&lt;array name&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="AFILL" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Inserts a specified value into one or more locations in a declared array, and returns the number of elements inserted.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;Var val&gt;"/>
		<Param name="[&lt;start expN&gt;"/>
		<Param name="[&lt;count expN&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="AGROW" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Adds an element, row, or column to an array and returns a numeric value representing the number of added elements.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="AINS" func="yes">
	<Overload retVal="{retVal}" descr="Arrays - 
		Inserts an element with the value false into a one-dimensional array, or inserts a row or column
	of elements with the value false into a two-dimensional array. Returns 1 if successful, an error if unsuccessful.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;position expN&gt;"/>
		<Param name=" [&lt;row/column expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="ALEN" func="yes">
	<Overload retVal="{retVal}" descr="Arrays - 
		Returns the number of elements, rows, or columns of an array.">
		<Param name="&lt;array&gt;"/>
		<Param name="[&lt;expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="ALIAS" func="yes">
	<Overload retVal="{expC}" descr="Xbase - 
		Returns the alias name of the current or a specified work area.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="ANSI" func="yes">
	<Overload retVal="{retVal}" descr="Miscellaneous Language Elements - 
		Returns a character string that is the ANSI equivalent of a character expression
	using the current global character set.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="APPEND"/>
<KeyWord name="ARESIZE" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Increases or decreases the size of an array according to the specified dimensions
	and returns a numeric value representing the number of elements in the modified array.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;new rows expN&gt;"/>
		<Param name="[&lt;new cols expN&gt;"/>
		<Param name="[&lt;retain values expN&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="ARGCOUNT" func="yes">
	<Overload retVal="{nVal}" descr="Core Language - 
		Returns the number of parameters passed to a routine.">
	</Overload>
</KeyWord>
<KeyWord name="ARGVECTOR" func="yes">
	<Overload retVal="{parameter value}" descr="Core Language - 
		Returns the specified parameter passed to a routine.">
		<Param name="&lt;parameter expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ASC" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns the numeric ASCII value of a specified character.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ASCAN" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Searches an array for an expression. Returns the number of the first element that matches
	the expression if the search is successful, or zero if the search is unsuccessful.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;exp&gt;"/>
		<Param name="[&lt;starting element expN&gt;"/>
		<Param name="[&lt;elements expN&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="ASIN" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse sine (arcsine) of a number.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ASORT" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Sorts the elements in a one-dimensional array or the rows in a two-dimensional array, returning 1 if successful or an error if unsuccessful.">
		<Param name="&lt;array name&gt;"/>
		<Param name="[&lt;starting element expN&gt;"/>
		<Param name="[&lt;elements to sort expN&gt;"/>
		<Param name="[&lt;sort order expN&gt;]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="ASUBSCRIPT" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Returns the row number or the column number of a specified element in an array.">
		<Param name="&lt;array name&gt;"/>
		<Param name="&lt;element expN&gt;"/>
		<Param name="&lt;row/column expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="AT" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns a number that represents the position of a string within another string.">
		<Param name="&lt;search expC&gt;"/>
		<Param name="&lt;target expC&gt;"/>
		<Param name="[&lt;nth occurrence expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="ATAN" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse tangent (arctangent) of a number.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ATN2" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse tangent (arctangent) of a given point.">
		<Param name="&lt;sine expN&gt;"/>
		<Param name="&lt;cosine expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="AVERAGE"/>
<KeyWord name="AVG" func="yes">
	<Overload retVal="{nVal}" descr="LocalSQL - 
		AVG() returns the average value of a numeric column. ">
		<Param name="&lt;column_name&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BEGINTRANS" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Begins transaction logging.">
		<Param name="[&lt;database name expC&gt;"/>
		<Param name="[&lt;isolation level expN&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="BINTYPE" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the predefined type number of a specified binary field.">
		<Param name="[&lt;field name&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="BITAND" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Performs a bitwise AND.">
		<Param name="&lt;expN1&gt;"/>
		<Param name="&lt;expN2&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITLSHIFT" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Shifts a number's bits to the left.">
		<Param name="&lt;int expN&gt;"/>
		<Param name="&lt;shift expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITNOT" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Inverts the bits in a number">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITOR" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Performs a bitwise OR.">
		<Param name="&lt;expN1&gt;"/>
		<Param name="&lt;expN2&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITRSHIFT" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Shifts a number's bits to the right, maintaining sign.">
		<Param name="&lt;int expN&gt;"/>
		<Param name="&lt;shift expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITSET" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Checks if a specified bit in a numeric value is on.">
		<Param name="&lt;int expN&gt;"/>
		<Param name="&lt;bit expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITXOR" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Performs a bitwise exclusive OR.">
		<Param name="&lt;expN1&gt;"/>
		<Param name="&lt;expN2&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BITZRSHIFT" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Shifts a number's bits to the right.">
		<Param name="&lt;int expN&gt;"/>
		<Param name="&lt;shift expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="BLANK"/>
<KeyWord name="BOF" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the record pointer in a table is at the beginning of the file.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="BOOKMARK" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns a bookmark for the current record.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="BROWSE"/>
<KeyWord name="CALCULATE"/>
<KeyWord name="CALLBACK"/>
<KeyWord name="CANCEL"/>
<KeyWord name="CASE"/>
<KeyWord name="CATCH"/>
<KeyWord name="CD"/>
<KeyWord name="CDOW" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns the name of the day of the week of a specified date.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="CEILING" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the nearest integer that is greater than or equal to a specified number.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="CENTER" func="yes">
	<Overload retVal="{expC}" descr="Strings - 
		Returns a character string that contains a string centered in a line of specified length.">
		<Param name="&lt;expC&gt;"/>
		<Param name="[&lt;length expN&gt;"/>
		<Param name="[&lt;pad expC&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="CERROR" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the last compiler error.">
	</Overload>
</KeyWord>
<KeyWord name="CHANGE" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Returns true if another user has changed a record since it was read from disk.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="CHARSET" func="yes">
	<Overload retVal="{expC}" descr="Miscellaneous Language Elements - 
		Returns the name of the character set the current table or a specified table is using.
	If no table is open and you issue CHARSET( ) without an argument, it returns the global character set in use.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="CHOOSEPRINTER" func="yes">
	<Overload retVal="{lVal}" descr="Text Streaming - 
		Opens a printer setup dialog box. Returns false if you cancel out of the dialog,
	true otherwise.Description, can be multi-line">
		<Param name="[&lt;title expC&gt;]"/>
		<Param name="[&lt;expL&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="CHR" func="yes">
	<Overload retVal="{expC}" descr="Strings - 
		Returns the character equivalent of a specified ASCII value.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="CLASS"/>
<KeyWord name="CLEAR"/>
<KeyWord name="CMONTH" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns the name of the month of a specified date.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="COMMIT" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Clears the transaction log, committing all logged changes.">
		<Param name="[&lt;database name expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="CONTINUE"/>
<KeyWord name="COPY"/>
<KeyWord name="COS" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the trigonometric cosine of an angle.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="COUNT" func="yes">
	<Overload retVal="{nVal}" descr="LocalSQL - 
		Count(),for counting the number of values in a column that match specified criteria">
		<Param name="&lt;column_name&gt;"/>
	</Overload>
	<Overload retVal="{}" descr="Xbase Command - Counts the number of records that match specified conditions. See OLH.">
		<Param name="[&lt;scope&gt;]"/>
		<Param name="[FOR &lt;condition 1&gt;]"/>
		<Param name="[WHILE &lt;condition 2&gt;]"/>
		<Param name="[TO &lt;memvar&gt;]"/>
	</Overload>
	<Overload retVal="{}" descr="OOP - a method implemented differently depending on the object using it.
		Usage: - &lt;objRef&gt;.count()">
	</Overload>
</KeyWord>
<KeyWord name="CTOD" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time - 
		Interprets a specified character expression as a literal date.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="CTODT" func="yes">
	<Overload retVal="{dtVal}" descr="Date and Time - 
		'Character to DateTime' converts a literal DateTime string to a DateTime (DT) value.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="CTOT" func="yes">
	<Overload retVal="{tVal}" descr="Date and Time - 
		'Character to TIME'( ) converts a literal Time string to a Time value.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DATABASE" func="yes">
	<Overload retVal="{expC}" descr="Xbase - 
		Returns the name of the current database from which tables are accessed.">
	</Overload>
</KeyWord>
<KeyWord name="DATE" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time - 
		Returns the system date.">
	</Overload>
</KeyWord>
<KeyWord name="DATETIME" func="yes">
	<Overload retVal="{dtVal}" descr="Date and Time - 
		Returns a value representing the current date and time.">
	</Overload>
</KeyWord>
<KeyWord name="DAY" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the numeric value of the day of the month for a specified date.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DBASE_SUPPRESS_STARTUP_DIALOGS"/>
<KeyWord name="DBERROR" func="yes">
	<Overload retVal="{eVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the last BDE error.">
	</Overload>
</KeyWord>
<KeyWord name="DBF" func="yes">
	<Overload retVal="{expC}" descr="Xbase - 
		Returns the name of a table open in the current or a specified work area.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="DBMESSAGE" func="yes">
	<Overload retVal="{eVal}" descr="Miscellaneous Language Elements - 
		Returns the error message of the last BDE error.">
	</Overload>
</KeyWord>
<KeyWord name="DECLARE"/>
<KeyWord name="DEFINE"/>
<KeyWord name="DELETE"/>
<KeyWord name="DELETED" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the current record is marked as deleted.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="DESCENDING" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified index is in descending order.">
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="[&lt;index position expN&gt;"/>
		<Param name="[&lt;alias&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="DIFFERENCE" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns a number that represents the phonetic difference between two strings.">
		<Param name="&lt;expC1&gt;"/>
		<Param name="&lt;expC2&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DIR"/>
<KeyWord name="DISKSPACE" func="yes">
	<Overload retVal="{nVal}" descr="Files and Operating System - 
		Returns the number of bytes available on the current or specified drive's disk.">
		<Param name="[&lt;drive expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="DISPLAY"/>
<KeyWord name="DMY" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns a specified date as a character string in DD MONTH YY or DD MONTH YYYY format.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DO"/>
<KeyWord name="DOS"/>
<KeyWord name="DOW" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the day of the week corresponding to a specified date as a number from 1 to 7.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTOC" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Converts a date into a literal date string.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTODT" func="yes">
	<Overload retVal="{dtVal}" descr="Date and Time - 
		'Date to DateTime' converts a date to a DateTime value (DT).">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTOR" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the radian value of an angle whose measurement is given in degrees.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTOS" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns a specified date as a character string in YYYYMMDD format.">
		<Param name="&lt;expD&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTTOC" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		'DateTime to Character' converts a DateTime value to a literal DateTime string.">
		<Param name="&lt;dtVar&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTTOD" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time - 
		'DateTime to Date' converts the date component of a DateTime value to a literal Date .">
		<Param name="&lt;dtVar&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="DTTOT" func="yes">
	<Overload retVal="{tVal}" descr="Date and Time - 
		'DateTime to Time' converts the time component of a DateTime value to a Time value .">
		<Param name="&lt;dtVar&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="EDIT"/>
<KeyWord name="EJECT"/>
<KeyWord name="EJECTPAGE"/>
<KeyWord name="ELAPSED" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the number of seconds elapsed between two specified times.">
		<Param name="&lt;stop time expC&gt;"/>
		<Param name="&lt;start time expC&gt;"/>
		<Param name="[&lt;exp&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="ELSE"/>
<KeyWord name="ELSEIF"/>
<KeyWord name="EMPTY" func="yes">
	<Overload retVal="{lVal}" descr="Core Language - 
		Returns true if a specified expression is empty.">
		<Param name="&lt;exp&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ENDFOR"/>
<KeyWord name="ENDIF"/>
<KeyWord name="ENDPRINTJOB"/>
<KeyWord name="ENDTRY"/>
<KeyWord name="ENUMERATE" func="yes">
	<Overload retVal="{assocArray}" descr="Core Language - 
		Returns a listing of the member names of an object.">
		<Param name="&lt;oRef&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="EOF" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the record pointer is at the end-of-file.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="ERASE"/>
<KeyWord name="ERROR" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the most recent dBASE Plus error.">
	</Overload>
</KeyWord>
<KeyWord name="EXIT"/>
<KeyWord name="EXP" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns e raised to a specified power.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="EXTERN"/>
<KeyWord name="EXTRACT" func="yes">
	<Overload retVal="{retVal}" descr="LocalSQL - 
		Local SQL supports the EXTRACT( ) function for isolating a single numeric field
		from a date/time field on retrieval using the following syntax: EXTRACT (&lt;extract field&gt; FROM &lt;field name&gt;)
		See OLH for more information">
		<Param name="[&lt;extract field&gt;]"/>
		<Param name="[FROM &lt;field name&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FACCESSDATE" func="yes">
    <Overload retVal="{dVal}" descr="File Information Functions - 
		Returns the last date a file was opened.">
        <Param name="&lt;filename expC&gt;"/>
    </Overload>
</KeyWord>
<KeyWord name="FCLOSE" func="yes">
	<Overload retVal="{lVal}" descr="Low-level File Functions - 
		Closes a file previously opened with FCREATE()">
		<Param name="&lt;filehandle&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FCOUNT" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of fields in a table.">
		<Param name="&lt;alias&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FCREATE" func="yes">
	<Overload retVal="{filehandle}" descr="Low-level File Functions - 
		Creates and opens a specified file.">
		<Param name="&lt;filename expC&gt;"/>
		<Param name=">[&lt;access expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FCREATEDATE" func="yes">
	<Overload retVal="{dVal}" descr="File Information Functions - 
		Returns the date a file was created.">
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FCREATETIME" func="yes">
	<Overload retVal="{tVal}" descr="File Information Functions - 
		Returns the time a file was created.">
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FDATE" func="yes">
	<Overload retVal="{dVal}" descr="File Information Functions - 
		Returns the date stamp for a file, the date the file was last modified.">
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FDECIMAL" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of decimal places in a specified field of a table.">
		<Param name="&lt;field number expN&gt;"/>
		<Param name="[&lt;alias&gt;])"/>
	</Overload>
</KeyWord>
<KeyWord name="FEOF" func="yes">
	<Overload retVal="{lVal}" descr="Low-level File Functions - 
		Returns true if the file pointer is at the end of a file
	previously opened with FCREATE() or FOPEN()">
		<Param name="&lt;filehandle&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FERROR" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Returns the error number of the most recent byte-level input or output error,
		or 0 if the most recent byte-level method was successful. Used in a TRY and CATCH block to get the error number. See OLH">
	</Overload>
</KeyWord>
<KeyWord name="FFLUSH" func="yes">
	<Overload retVal="{lVal}" descr="Low-level File Functions - 
		Writes to disk a file previously opened with
	FCREATE() or FOPEN() without closing the file. Returns true if successful and false if unsuccessful.">
		<Param name="&lt;filehandle&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FGETS" func="yes">
	<Overload retVal="{expC}" descr="Low-level File Functions - 
		Returns a line of text from a file previously opened with FCREATE() or FOPEN().">
		<Param name="&lt;filehandle expN&gt;"/>
		<Param name="&lt;characters expN&gt;"/>
		<Param name="&lt;end-of-line expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FIELD" func="yes">
	<Overload retVal="{cVal}" descr="Xbase - 
		Returns the name of the field in a specified position of a table.">
		<Param name="&lt;field number expN&gt;"/>
		<Param name=" [&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FILE" func="yes">
	<Overload retVal="{lVal}" descr="Files and Operating System - 
		Tests for the existence of a file. Returns true if the file exists and false if it doesn't.
	Both options need to be enclosed in quotes">
		<Param name="&lt;filename expC&gt; | :&lt;sourceAlias&gt;:filename expC"/>
	</Overload>
</KeyWord>
<KeyWord name="FINALLY"/>
<KeyWord name="FINDINSTANCE" func="yes">
	<Overload retVal="{oRef}" descr="Core Language - 
		Returns an object of the specified class from the object heap.">
		<Param name="&lt;classname expC&gt;"/>
		<Param name="[&lt;previous oRef&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FLDCOUNT" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of fields in a table. Same as FCOUNT()">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FLDLIST" func="yes">
	<Overload retVal="{fieldList}" descr="Xbase - 
		Returns the fields and calculated field expressions of a SET FIELDS TO list.">
		<Param name="[&lt;field number expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FLENGTH" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the length of the field in a specified position of a table.">
		<Param name="&lt;field number expN&gt;"/>
		<Param name=" [&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FLOCK" func="yes">
	<Overload retVal="{retVal}" descr="Xbase - 
		Locks a table.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FLOOR" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the nearest integer that is less than or equal to a specified number.">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FLUSH"/>
<KeyWord name="FNAMEMAX" func="yes">
	<Overload retVal="{nVal}" descr="Files and Operating System - 
		Returns the maximum allowable file-name length on a given drive or volume.
		See OLH for more information.">
		<Param name="[&lt;filename expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FOPEN" func="yes">
	   <Overload retVal="{filehandle}" descr="Low-level File Functions - 
		Opens a specified file.">
		   <Param name="&lt;filename expC&gt;"/>
		   <Param name="&lt;access expC&gt;"/>
	   </Overload>
</KeyWord>
<KeyWord name="FOR" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the FOR clause of a specified index tag.">
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="[&lt;index position expN&gt;"/>
		<Param name="[&lt;alias&gt;]]"/>
	</Overload>
	<Overload retVal="{}" descr="Language Definition - Control Statements - Part of a FOR/ENDFOR Loop construct.">
	</Overload>
</KeyWord>
<KeyWord name="FOUND" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the last-issued search command found a match.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FPUTS" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Writes a character string, and one or two end-of-line characters,
	to a file previously opened with FCREATE() or FOPEN(). Returns the number of characters written.">
		<Param name="&lt;filehandle&gt;"/>
		<Param name="&lt;string expC&gt;"/>
		<Param name="[&lt;characters expN&gt;"/>
		<Param name="[&lt;end-of-line expC&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="FREAD" func="yes">
	<Overload retVal="{stringVal}" descr="Low-level File Functions - 
		Returns a specified number of characters
	from a file previously opened with FCREATE() or FOPEN().">
		<Param name="&lt;filehandle&gt;"/>
		<Param name="&lt;characters expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FROM"/>
<KeyWord name="FSEEK" func="yes">
	<Overload retVal="{newPosition}" descr="Low-level File Functions - 
		Moves the file pointer in a file previously opened with FCREATE() or FOPEN(),
	and returns the new position of the file pointer.">
		<Param name="&lt;filehandle&gt;"/>
		<Param name="&lt;offset expN&gt;"/>
		<Param name="[&lt;position expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FSHORTNAME" func="yes">
	<Overload retVal="{stringVal}" descr="File Information Functions - 
		Returns the short (8.3) name of a file.">
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FSIZE" func="yes">
	<Overload retVal="{nVal}" descr="File Information Functions - 
		Returns the size of a file in bytes.">
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FTIME" func="yes">
	<Overload retVal="{tVal}" descr="File Information Functions - 
		Returns the time stamp for a file, the time the file was last modified.">
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FUNCTION"/>
<KeyWord name="FUNIQUE" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Creates a unique file name. Read Documentation for usage">
		<Param name="[&lt;expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="FV" func="yes">
	<Overload retVal="{floatVal}" descr="Math/Money - 
		Returns the future value of an investment.">
		<Param name="&lt;payment expN&gt;"/>
		<Param name="&lt;interest expN&gt;"/>
		<Param name="&lt;term expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="FWRITE" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Writes a character string to a file previously opened
	with FCREATE() or FOPEN(). Returns the number of characters written.">
		<Param name="&lt;filehandle&gt;"/>
		<Param name="&lt;expC&gt;"/>
		<Param name="[&lt;characters expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="GENERATE"/>
<KeyWord name="GETCALLADDRESS"/>
<KeyWord name="GETCOLOR" func="yes">
	<Overload retVal="{stringVal}" descr="Application Shell - 
		Calls a dialog box in which you can define a custom color or select a color
	from the color palette. Returns a character string containing the red, green, and blue values for the color selected.">
		<Param name="[&lt;title expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="GETDIRECTORY" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Displays a dialog box from which you can select a directory for use 
	with subsequent commands.">
		<Param name="[&lt;directory expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="GETENV" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Returns the value of an operating system environment variable.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="GETFILE" func="yes">
	<Overload retVal="{filename}" descr="Files and Operating System - 
		Displays a dialog box from which the user can choose,
		or enter, an existing file name, and returns this file name.
		Read Documentation for further options.
		Parameters with empty angle brackets (&lt; &gt;) will need to have empty quotes if they're not being used.
		GETFILE() with no parameters brings up a general purpose dialog box.">
		<Param name="[&lt;filename skeleton expC&gt;"/>
		<Param name="[&lt;title expC&gt;"/>
		<Param name="[&lt;suppress database expL&gt;]"/>
		<Param name="[&lt;file types list expC&gt; | &lt;file type group name expC&gt;(&lt;file types list expC&gt;)]]]"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		GETFILE(&lt;filename skeleton expC&gt;) - Files to show *.* *.prg etc">
		<Param name="&lt;filename skeleton expC&gt;" />
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		GETFILE( &lt; &gt;, &lt;title expC&gt;) - Title's the Dialog Box">
		<Param name="&lt; &gt;"/>
		<Param name="&lt;title expC&gt;" />
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		GETFILE(&lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;) - Database Selector true/false">
		<Param name="&lt; &gt;" />
		<Param name="&lt; &gt;" />
		<Param name="&lt;suppress database expL&gt;" />
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		GETFILE(&lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;,
		&lt;file types list expC&gt; | &lt;file type group name expC&gt;(&lt;file types list expC&gt;) )
		- File type group selection or custom type group with file extension list.">
		<Param name="&lt; &gt;" />
		<Param name="&lt; &gt;" />
		<Param name="&lt;suppress database expL&gt;" />
		<Param name="&lt;file types list expC&gt; | &lt;file type group name expC&gt;(&lt;file types list expC&gt;) " />
	</Overload>
</KeyWord>
<KeyWord name="GETFONT" func="yes">
	<Overload retVal="{stringVal}" descr="Application Shell - 
		Calls a dialog box in which you select a character font.
	Returns a string containing the font name, point size, font style (if you choose a style other than Regular), and family.">
		<Param name="[&lt;title expC&gt;"/>
		<Param name="[&lt;fontstr expC&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="GO"/>
<KeyWord name="HAVING"/>
<KeyWord name="HOME" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Returns the directory where the PLUS.exe in use is located.">
	</Overload>
</KeyWord>
<KeyWord name="HTOI" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Returns the numeric value of a specified hexadecimal number.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ID" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns the name of the current user on a local area network (LAN)
	or other multiuser system.">
	</Overload>
</KeyWord>
<KeyWord name="IF"/>
<KeyWord name="IIF" func="yes">
	<Overload retVal="{value}" descr="Core Language - 
		Returns one of two values depending on the result of a specified logical expression.">
		<Param name="&lt;expL&gt;, "/>
		<Param name="&lt;exp1&gt;"/>
		<Param name="&lt;exp2&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="INDEX"/>
<KeyWord name="INKEY" func="yes">
	<Overload retVal="{nVal}" descr="Application Shell - 
		Gets the first keystroke waiting in the keyboard typeahead buffer.
	Can also be used to wait for a keystroke and return its value.">
		<Param name="[&lt;seconds expN&gt;]"/>
		<Param name="[&lt;mouse expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="INSERT"/>
<KeyWord name="INSPECT" func="yes">
	<Overload retVal="{}" descr="IDE Language Elements - 
		Opens the Inspector, a window that lists object properties and lets you change their settings.">
		<Param name="&lt;object oRef&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="INT" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the integer portion of a specified number">
		<Param name="&lt;expN&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ISALPHA" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if the first character of a string is alphabetic.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ISBLANK" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Determines if a specified field or expression is blank.">
		<Param name="exp"/>
	</Overload>
</KeyWord>
<KeyWord name="ISLOWER" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if the first character of a string is alphabetic and lowercase.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ISTABLE" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Tests for the existence of a table in a specified database.">
		<Param name="&lt;filename&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ISUPPER" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if the first character of a string is alphabetic and uppercase.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="ITOH" func="yes">
	<Overload retVal="{stringVal}" descr="Bitwise - 
		Returns the hexadecimal equivalent of a specified number, as a character string.">
		<Param name="&lt;int expN&gt;"/>
		<Param name="[&lt;chars expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="KEY" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the key expression of the specified index.">
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="[&lt;index position expN&gt;"/>
		<Param name="[&lt;alias&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="KEYMATCH" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified expression is found in an index. Using &lt;exp&gt; only">
		<Param name="&lt;exp&gt;"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified expression is found in an index. Using &lt;index position expN&gt;">
		<Param name="&lt;exp&gt;"/>
		<Param name="[&lt;index position expN&gt;]"/>
		<Param name="&lt;tag expN&gt;"/>
		<Param name="[&lt;alias&gt;]]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified expression is found in an index. Using [&lt;.mdx filename expC&gt;] ">
		<Param name="&lt;var exp&gt;"/>
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="&lt;tag expN&gt;"/>
		<Param name="[&lt;alias&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="LDRIVER" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
	Returns the name of the language driver the current table or a specified table is using.
	If no table is open and you issue LDRIVER( ) without an argument, it returns the global language driver in use.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="LEFT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LEN" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LENNUM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LIKE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LINENO" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LIST"/>
<KeyWord name="LKSYS" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LOCAL"/>
<KeyWord name="LOCATE"/>
<KeyWord name="LOCK" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LOG" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LOG10" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LOGOUT"/>
<KeyWord name="LOOKUP" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LOOP"/>
<KeyWord name="LOWER" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LTRIM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="LUPDATE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MAX" func="yes">
	<Overload retVal="{Greater value}" descr="LocalSQL - 
		Compares provided expression and returns the largest column value. 
		See OLH for LocalSQL usage and SQL documentation for full syntax">
		<Param name="&lt;column_name&gt;" />
	</Overload>
   <Overload retVal="{Greater value}" descr="Xbase - 
		Compares two numbers (or two date, character, or logical expressions) and returns the greater value.">
		<Param name="&lt;value exp1&gt;" />
		<Param name="&lt;value exp2&gt;" />
	</Overload>
</KeyWord>
<KeyWord name="MD"/>
<KeyWord name="MDX" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MDY" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MEMLINES" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MEMORY" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MESSAGE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MIN" func="yes">
	<Overload retVal="{smallerValue}" descr="LocalSQL - 
		Compares provided expression and returns the smaller column value. 
		See OLH for LocalSQL usage and SQL documentation for full syntax">
		<Param name="&lt;column_name&gt;"/>
	</Overload>
	<Overload retVal="{retVal}" descr="Xbase - 
	Compares two numbers (or two date, character, or logical expressions) and returns the lesser value.">
		<Param name="&lt;value exp1&gt;" />
		<Param name="&lt;value exp2&gt;" />
	</Overload>
</KeyWord>
<KeyWord name="MKDIR"/>
<KeyWord name="MLINE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MOD" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="MONTH" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="NDX" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="NETWORK" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="OEM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="ORDER" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="OS" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="OTHERWISE"/>
<KeyWord name="PACK"/>
<KeyWord name="PARAMETER"/>
<KeyWord name="PARAMETERS"/>
<KeyWord name="PARAMS"/>
<KeyWord name="PAYMENT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PCOL" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PCOUNT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PI" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PRINTJOB"/>
<KeyWord name="PRINTSTATUS" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PRIVATE"/>
<KeyWord name="PROCEDURE"/>
<KeyWord name="PROCREFCOUNT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PROGRAM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PROPER" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PROTECT"/>
<KeyWord name="PROW" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="PUBLIC"/>
<KeyWord name="PUTFILE" func="yes">
	<Overload retVal="{filename}" descr="Files and Operating System - 
		Displays a dialog box within which the user can choose an exisiting file
		to overwrite or a new file name, and returns the file name. The function has
		several parameter options detailed below, but here is the main syntactic options.
		See OLH for more thorough information and usage.
		Parameters with empty angle brackets (&lt; &gt;) will need to have empty quotes if they're not being used.
		PUTFILE([&lt;title expC&gt;
		[, &lt;filename expC&gt;
		[, &lt;extension expC&gt;
		[, &lt;suppress database expL&gt;>],
		[&lt;file types list expC&gt; | &lt;file group name expC&gt; (&lt;file types list expC&gt;)]]]])
		PUTFILE() with no parameters brings up a general use file dialog box.">
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		PUTFILE([&lt;title expC&gt;]) - Titles the Dialog Box">
		<Param name="&lt;title expC&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		PUTFILE([ &lt; &gt;, &lt;filename expC&gt;]) - Filename to display in dialog box entryfield">
		<Param name="&lt; &gt;"/>
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		PUTFILE([ &lt; &gt;, &lt; &gt;, &lt;extension expC&gt;]) - Filename extension to save with, jpg,prg etc."> 
		<Param name="&lt; &gt;"/>
		<Param name="&lt; &gt;"/>
		<Param name="&lt;extension expC&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		PUTFILE([ &lt; &gt;, &lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;]) - Database Selector true/false"> 
		<Param name="&lt; &gt;"/>
		<Param name="&lt; &gt;"/>
		<Param name="&lt; &gt;"/>
		<Param name="&lt;suppress database expL&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		PUTFILE([ &lt; &gt;, &lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;, 
		[&lt;file types list expC&gt; | &lt;file group name expC&gt; (&lt;file types list expC&gt;)]])
		- File type group selection or custom type group with file extension list.">
		<Param name="&lt; &gt;"/>
		<Param name="&lt; &gt;"/>
		<Param name="&lt; &gt;"/>
		<Param name="&lt;suppress database expL&gt;"/>
		<Param name="&lt;file types list expC&gt; | &lt;file group name expC&gt; (&lt;file types list expC&gt;)"/>
	</Overload>
</KeyWord>
<KeyWord name="PV" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="QUIT"/>
<KeyWord name="RANDOM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
	</Overload>
</KeyWord>
<KeyWord name="RAT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RECALL"/>
<KeyWord name="RECCOUNT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RECNO" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RECSIZE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="REDEFINE"/>
<KeyWord name="REFCOUNT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="REFRESH"/>
<KeyWord name="REINDEX"/>
<KeyWord name="RELATION" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RELEASE"/>
<KeyWord name="RENAME"/>
<KeyWord name="REPLACE"/>
<KeyWord name="REPLICATE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RESOURCE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RESTORE"/>
<KeyWord name="RESUME"/>
<KeyWord name="RETRY"/>
<KeyWord name="RETURN"/>
<KeyWord name="RIGHT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RLOCK" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RMDIR"/>
<KeyWord name="ROLLBACK" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="ROUND" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RTOD" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RTRIM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="RUN" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SAVE"/>
<KeyWord name="SCAN"/>
<KeyWord name="SECONDS" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SEEK" func="yes">
	<Overload retVal="{newPosition}" descr="OOP - 
		Moves the file pointer in a file previously opened with create( ) or open( ), 
		and returns the new position of the file pointer.
		Usage - &lt;oRef&gt;.seek(&lt;offset expN&gt; [, &lt;position expN&gt;])">
		<Param name="&lt;offset expN&gt;"/>
		<Param name="[&lt;position expN&gt;]"/>
	</Overload>
		<Overload retVal="{lVal}" descr="Xbase - 
		Searches for the first record in an indexed table whose key matches the specified expression
		See OLH for SEEK() usage.">
		<Param name="&lt;exp&gt;"/>
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
		<Overload retVal="{}" descr="Xbase - 
		Searches for the first record in an indexed table whose key fields matches the specified expression or expression list.
		See OLH for SEEK usage">
		<Param name="&lt;exp&gt; | &lt;exp list&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="SELECT" func="yes">
	<Overload retVal="{}" descr="OOP - Form Objects - TreeItem - 
		Makes the tree item the selected item in the tree.
		Usage - &lt;oRef&gt;.select( )">
	</Overload>
	<Overload retVal="{data}" descr="LocalSQL - 
		Retrieves data from one or more tables.
		See OLH for SELECT usage.">
		<Param name="[DISTINCT] &lt;column list&gt;"/>
	</Overload>
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of an available work area or the work area number associated with a specified alias.">
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
	<Overload retVal="{}" descr="Xbase - Command -
	Sets the current work area in which to open or perform operations on a table.">
		<Param name="&lt;alias&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="SET" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SETTO" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SIGN" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SIN" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SKIP"/>
<KeyWord name="SORT"/>
<KeyWord name="SOUNDEX" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SPACE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SQLERROR" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SQLEXEC" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SQLMESSAGE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SQRT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="STATIC"/>
<KeyWord name="STORE"/>
<KeyWord name="STR" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="STUFF" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SUBSTR" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SUBSTRING" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="SUM" func="yes">
	<Overload retVal="{columnSum}" descr="LocalSQL - 
	Totals all numeric values in a column. See OLH for SUM() usage.">
		<Param name="&lt;column_name&gt;"/>
	</Overload>
	<Overload retVal="{}" descr="Xbase - Command - 
	Computes a total for specified numeric fields in the current table.
	See OLH for this command usage.">
		<Param name="[&lt;exp list&gt;]"/>
		<Param name="[&lt;scope&gt;]"/>
		<Param name="[FOR &lt;condition 1&gt;]"/>
		<Param name="[WHILE &lt;condition 2&gt;]"/>
		<Param name="[TO &lt;memvar list&gt; | TO ARRAY &lt;array&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="SUSPEND"/>
<KeyWord name="TAG" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TAGCOUNT" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TAGNO" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TAN" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TARGET" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="THROW"/>
<KeyWord name="TOTAL"/>
<KeyWord name="TRANSFORM" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TRIM" func="yes">
	<Overload retVal="{stringTrimmed}" descr="LocalSQL - 
		Removes repetitions of either spaces or a specified character from the
		left, right, or both sides of a string. See OLH for LocalSQL TRIM() usage.">
		<Param name="BOTH | LEADING | TRAILING"/>
		<Param name="&lt;char&gt;"/>
		<Param name="FROM &lt;expC&gt;"/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
	Returns a string with no trailing space characters.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="TRY"/>
<KeyWord name="TTIME" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TTOC" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="TYPE" func="yes">
	<Overload retVal="{stringType}" descr="Core Language - 
		Returns a character string that indicates a specified expression's data type.">
		<Param name="&lt;expC&gt;"/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Files and Operating Systems - Command - 
		Display the contents of a text file. See OLH for usage of the TYPE Command.">
		<Param name="&lt;filename 1&gt; | ? | &lt;filename skeleton 1&gt;"/>
		<Param name="[MORE]"/>
		<Param name="[NUMBER]"/>
		<Param name="[TO FILE &lt;filename 2&gt; | ? | &lt;filename skeleton 2&gt;] | [TO PRINTER]"/>
	</Overload>
	<Overload retVal="{stringVal}" descr="OOP - Field - 
		The data type of the value stored in a field.">
		<Param name="name exptype"/>
	</Overload>
	<Overload retVal="{nVal}" descr="OOP - Parameter - 
		An enumerated value indicating the type of parameter.">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="UNION"/>
<KeyWord name="UNIQUE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="UNLOCK"/>
<KeyWord name="UPDATE"/>
<KeyWord name="UPPER" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="USE"/>
<KeyWord name="USER" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="UTC" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="VAL" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="VALIDDRIVE" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="VERSION" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="WHERE"/>
<KeyWord name="WITH"/>
<KeyWord name="WORKAREA" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="YEAR" func="yes">
	<Overload retVal="{retVal}" descr="Description, can be multi-line">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="ZAP"/>
<KeyWord name="__dbasewin__"/>
<KeyWord name="__vdb__"/>
<KeyWord name="__version__"/>
<KeyWord name="abandon" func="yes">
	<Overload retVal="{lVal}" descr="Method - Abandons any pending changes to the current row.
		Property of: Rowset, ArrayRowset
		Usage: &lt;oRef&gt; .abandon() - &lt;oRef&gt;  = The rowset whose
		current row buffer you want to abandon. ">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="abandonRecord" func="yes">
	<Overload retVal="{lVal}" descr="Method - Abandons changes to the current record.
		Property of: Form, SubForm
		Usage: &lt;oRef&gt; .abandonRecord() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="abandonUpdates" func="yes">
	<Overload retVal="{null}" descr="Method - Abandons all cached updates in the database.
	Property of: Database
	Usage: &lt;oRef&gt; .abandonUpdates() - &lt;oRef&gt;  = The database whose
	cached changes you want to abandon.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="abs" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the absolute value of a specified number.">
		<Param name="&lt;Var expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="access" func="yes">
	<Overload retVal="{accessLevelN}" descr="Miscellaneous Language Elements - 
		Returns the access level of the current user for DBF table security.">
	</Overload>
	<Overload retVal="{nVal}" descr="Method - Returns the access level of the current session for DBF table security.
	Property of: Session
	Usage: &lt;oRef&gt; .access() - &lt;oRef&gt;  = The session you want to test.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="accessDate" func="yes">
	<Overload retVal="{dVal}" descr="Method - Returns the last date a file was opened.
	Property of: File
	Usage: &lt;oRef&gt; .accessDate(&lt;filename expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  = The name of the file to check. Wildcard characters are not
	allowed; you must specify the actual file name.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="acopy" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Copies elements from one array to another. Returns the number of elements copied.">
		<Param name="&lt;sourcearray name&gt; "/>
		<Param name="&lt;targetarray name&gt; "/>
		<Param name="[&lt;startingelement expN&gt; "/>
		<Param name="[&lt;elements expN&gt; "/>
		<Param name="[&lt;targetelemnt expN&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="acos" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse cosine (arccosine) of a number.">
		<Param name="&lt;value expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="add" func="yes">
	<Overload retVal="{null}" descr="Method - Adds an element to a one-dimensional array.
	Property of: Array
	Usage: &lt;oRef&gt; .add(&lt;exp&gt; ) - 
	&lt;oRef&gt;  = A reference to the one-dimensional array
	to which you want to add the element.
	&lt;exp&gt;  = An expression of any type you want to assign to the new element.">
	<Param name="&lt;exp&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="addPassword" func="yes">
	<Overload retVal="{null}" descr="Method - Adds a password to the 
	session’s password list for DB table security.
	Property of: &lt;Object&gt; 
	Usage: &lt;oRef&gt; .addPassword(&lt;expC&gt; ) - &lt;oRef&gt;  = The session you want
	to receive the password.
	&lt;expC&gt;  = The password string.">
	<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="addToMRU" func="yes">
	<Overload retVal="{null}" descr="Method - 
	The addToMRU( ) method can be called from a dBL program that runs in the dBASE IDE.
	If called in a dBASE runtime application, it will RETURN without doing anything.
	See OLH for full usage information.
	Property of: _app
	Usage: _app.addToMRU( &lt;filename&gt; , &lt;launchMode&gt;  ) - &lt;oRef&gt;  = _app">
	<Param name="&lt;filename&gt; "/>
	<Param name="&lt;launchMode&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="adel" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Deletes an element from a one-dimensional array, or deletes a row or column of 
	elements from a two-dimensional array. Returns 1 if successful, an error if unsuccessful.">
		<Param name="&lt;array name&gt; "/>
		<Param name="&lt;position expN&gt; "/>
		<Param name="[&lt;row/column expN&gt; ])"/>
	</Overload>
</KeyWord>
<KeyWord name="adir" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Stores to a declared array five characteristics of specified files: name, size, date stamp, time stamp,
	and attribute(s). Returns the number of files whose characteristics are stored.">
		<Param name="&lt;array name&gt; "/>
		<Param name="[&lt;filenameskeleton expC&gt; "/>
		<Param name="[&lt;file attribute list expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="adirext" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		On a Windows® 95/98/2000/NTsystem, stores to a declared array nine characteristics of specified files:
	name, size, date stamp,	time stamp, attribute(s), alias, creation date, creation time, and last access date. 
	Returns the number of files whose characteristics are stored.">
		<Param name="&lt;array name&gt; "/>
		<Param name="[&lt;filenameskeleton expC&gt; "/>
		<Param name="[&lt;fileattributelist expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="advise" func="yes">
	<Overload retVal="{null}" descr="Method - Creates a DDE hot link
	to enable the passing of notification messages whenever a specified 
	topic item changes in the server application.
	Property of: DDELink
	Usage: &lt;oRef&gt; .advise(&lt;item expC&gt; ) - &lt;oRef&gt;  = DDELink
	&lt;item expC&gt;  = The name of the topic item you want to monitor.">
	<Param name="&lt;item expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="aelement" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Returns the number of a specified element in a one- or two-dimensional array.">
		<Param name="&lt;array name&gt; "/>
		<Param name="&lt;subscript1 expN&gt; "/>
		<Param name="[&lt;subscript2 expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="afields" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Stores the current table's structural information to a declared array and returns the number of fields
	whose characteristics are stored.">
		<Param name="&lt;array name&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="afill" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Inserts a specified value into one or more locations in a declared array, and returns the number of elements inserted.">
		<Param name="&lt;array name&gt; "/>
		<Param name="&lt;Var val&gt; "/>
		<Param name="[&lt;start expN&gt; "/>
		<Param name="[&lt;count expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="agAverage" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that returns the 
	mean average for a group.
	Property of: Group
	Usage: &lt;oRef&gt; .agAverage(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object that defines the group
	you want to summarize.
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns the value to average.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agCount" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that returns
	the number of items in a group.
	Property of: Group
	Usage: &lt;oRef&gt; .agCount(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object 
	that defines the group you want to summarize.	
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns the
	value you want to count.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agMax" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that
	returns the highest value within a group
	Property of: Group
	Usage: &lt;oRef&gt; .agMax(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object
	that defines the group you want to summarize.
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns the
	value you want to track.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agMin" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that
	returns the lowest value within a group.
	Property of: Group
	Usage: &lt;oRef&gt; .agMin(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object
	that defines the group you want to summarize.
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns
	the value you want to track.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agStdDeviation" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that
	returns the standard deviation of the values in a group.
	Property of: Group
	Usage: &lt;oRef&gt; .agStdDeviation(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object
	that defines the group you want to summarize.
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns
	the value you want to sample.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agSum" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that
	returns the total of a group.
	Property of: Group
	Usage: &lt;oRef&gt; .agSum(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object
	that defines the group you want to summarize.
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns
	the value you want to total.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agVariance" func="yes">
	<Overload retVal="{nVal}" descr="Method - Aggregate method that
	returns the variance of the values in a group.
	Property of: Group
	Usage: &lt;oRef&gt; .agVariance(&lt;codeblock&gt; ) - &lt;oRef&gt;  = The Group object
	that defines the group you want to summarize.
	&lt;codeblock&gt;  = A codeblock or pointer to a function that returns
	the value you want to sample.">
	<Param name="&lt;codeblock&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="agrow" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Adds an element, row, or column to an array and returns a numeric value representing the number of added elements.">
		<Param name="&lt;array name&gt; "/>
		<Param name="Var expN"/>
	</Overload>
</KeyWord>
<KeyWord name="ains" func="yes">
	<Overload retVal="{retVal}" descr="Arrays - 
		Inserts an element with the value false into a one-dimensional array, or inserts a row or column
	of elements with the value false into a two-dimensional array. Returns 1 if successful, an error if unsuccessful.">
		<Param name="&lt;array name&gt; "/>
		<Param name="&lt;position expN&gt; "/>
		<Param name=" [&lt;row/column expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="alen" func="yes">
	<Overload retVal="{retVal}" descr="Arrays - 
		Returns the number of elements, rows, or columns of an array.">
		<Param name="&lt;array ref&gt; "/>
		<Param name="[&lt;option expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="alias" func="yes">
	<Overload retVal="{expC}" descr="Xbase - 
		Returns the alias name of the current or a specified work area.">
		<Param name="[&lt;string alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="ansi" func="yes">
	<Overload retVal="{retVal}" descr="Miscellaneous Language Elements - 
		Returns a character string that is the ANSI equivalent of a character expression
	using the current global character set.">
		<Param name="&lt;string expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="append"/>
<KeyWord name="append" func="yes">
	<Overload retVal="{null}" descr="Method - Adds rows from one rowset or table to another.
	Property of: UpdateSet
	Usage: &lt;oRef&gt;.append() - &lt;oRef&gt; = The UpdateSet object that describes the append.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="appendUpdate" func="yes">
	<Overload retVal="{null}" descr="Method - Updates one rowset or table from another
	by updating existing rows and adding new rows.
	Property of: UpdateSet
	Usage: &lt;oRef&gt;.appendUpdate() - &lt;oRef&gt; = The UpdateSet object that describes the update.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="applyFilter" func="yes">
	<Overload retVal="{lVal}" descr="Method - Applies the filter that was
	set during a rowset’s Filter mode.
	Property of:Rowset, ArrayRowset
	Usage: &lt;oRef&gt;.applyFilter() - &lt;oRef&gt; = The rowset whose
	filter criteria you want to apply.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="applyLocate" func="yes">
	<Overload retVal="{null}" descr="Method - Finds the first row
	that matches specified criteria. See OLH for further information. ArrayRowset
	method must use dBL code in the expression.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt;.applyLocate([&lt;SQL condition expC&gt;]) - &lt;oRef&gt; = The rowset you want
	to search for the specified criteria.
	&lt;SQL condition expC&gt; = An SQL condition expression.">
	<Param name="[&lt;SQL condition expC&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="applyUpdates" func="yes">
	<Overload retVal="{lVal}" descr="Method - Attempts to apply all
	cached updates in the database.
	Property of: Database
	Usage: &lt;oRef&gt;.applyUpdates() - &lt;oRef&gt; = The database whose
	cached updates you want to apply.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="aresize" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Increases or decreases the size of an array according to the specified dimensions
	and returns a numeric value representing the number of elements in the modified array.">
		<Param name="array name"/>
		<Param name="&lt;newrows expN&gt; "/>
		<Param name="[&lt;newcols expN&gt; "/>
		<Param name="[&lt;retain values expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="argcount" func="yes">
	<Overload retVal="{nVal}" descr="Core Language - 
		Returns the number of parameters passed to a routine.">
	</Overload>
</KeyWord>
<KeyWord name="argvector" func="yes">
	<Overload retVal="{parameter value}" descr="Core Language - 
		Returns the specified parameter passed to a routine.">
		<Param name="&lt;parameter expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="asc" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the numeric ASCII
	value of a specified character.
	Property of: String
	Usage: &lt;oRef&gt; .asc(&lt;expC&gt; ) - &lt;oRef&gt;  = A reference to a String object.
	&lt;expC&gt;  = The character whose ASCII value you want to return.
	You can specify a string with more than one character,
	but dBASE uses only the first one.">
	<Param name="&lt;expC&gt; "/>
	</Overload>
	<Overload retVal="{nVal}" descr="Strings - 
		Returns the numeric ASCII value of a specified character.">
		<Param name="&lt;char expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ascan" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Searches an array for an expression. Returns the number of the first element that matches
	the expression if the search is successful, or zero if the search is unsuccessful.">
		<Param name="&lt;array name&gt; "/>
		<Param name="&lt;search exp&gt; "/>
		<Param name="[&lt;starting element expN&gt; "/>
		<Param name="[&lt;elements expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="asin" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse sine (arcsine) of a number.">
		<Param name="&lt;var expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="asort" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Sorts the elements in a one-dimensional array or the rows in a two-dimensional array, returning 1 if successful or an error if unsuccessful.">
		<Param name="&lt;array name&gt; "/>
		<Param name="[&lt;startingelement expN&gt; "/>
		<Param name="[&lt;elementstosort expN&gt; "/>
		<Param name="[&lt;sort order expN&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="asubscript" func="yes">
	<Overload retVal="{nVal}" descr="Arrays - 
		Returns the row number or the column number of a specified element in an array.">
		<Param name="&lt;array name&gt; "/>
		<Param name="&lt;element expN&gt; "/>
		<Param name="&lt;rowcolumn expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="at" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns a number that represents the position of a string within another string.">
		<Param name="&lt;search expC&gt; "/>
		<Param name="&lt;target expC&gt; "/>
		<Param name="[&lt;nth occurrence expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="atan" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse tangent (arctangent) of a number.">
		<Param name="&lt;nVal expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="atFirst" func="yes">
	<Overload retVal="{lVal}" descr="Method - Returns true if the row cursor
	is at the first row in the rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .atFirst() - &lt;oRef&gt;  = The rowset whose position you want to check.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="atLast" func="yes">
	<Overload retVal="{lVal}" descr="Method - Returns true if the row cursor
	is at the last row in the rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .atLast() - &lt;oRef&gt;  = The rowset whose position you want to check.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="atn2" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the inverse tangent (arctangent) of a given point.">
		<Param name="&lt;sine expN&gt; "/>
		<Param name="&lt;cosine expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="attach" func="yes">
	<Overload retVal="{null}" descr="Method - Establishes link between
	a toolbar and a form.
	Property of: Toolbar
	Usage: &lt;toRef&gt; .attach(&lt;oRef&gt; ) - &lt;toRef&gt;  = An object reference to the toolbar.
	&lt;oRef&gt;  = An object reference to the form.">
	<Param name="&lt;oRef&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="average"/>
<KeyWord name="avg" func="yes">
	<Overload retVal="{nVal}" descr="LocalSQL - 
		AVG() returns the average value of a numeric column. ">
		<Param name="column name"/>
	</Overload>
</KeyWord>
<KeyWord name="beginAppend" func="yes">
	<Overload retVal="{lVal}" descr="Method - Starts append of a new row.
	Property of: Rowset ArrayRowset
	Usage: &lt;oRef&gt; .beginAppend() - &lt;oRef&gt;  = The rowset you want to put in Append mode.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - 
	Creates a temporary buffer in memory for a record that is based on the structure
	of the current table, letting the user input data to the record without
	automatically adding the record to the table.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .beginAppend() - &lt;oRef&gt;  = An object reference to the form.">
	<Param name=""/>
	</Overload>
</KeyWord>	
<KeyWord name="beginEdit" func="yes">
	<Overload retVal="{lVal}" descr="Method - Makes contents of a row editable.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .beginEdit() - &lt;oRef&gt;  = The rowset you want to put in Edit mode.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="beginFilter" func="yes">
	<Overload retVal="{null}" descr="Method - Puts a rowset in Filter mode,
	allowing the entry of filter criteria.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .beginFilter() - &lt;oRef&gt;  = The rowset you want to put in Filter mode.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="beginLocate" func="yes">
	<Overload retVal="{null}" descr="Method - Puts a rowset in Locate mode,
	allowing the entry of search criteria.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .beginLocate() - &lt;oRef&gt;  = The rowset you want to put in Locate mode.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="beginNewFrame" func="yes">
	<Overload retVal="{null}" descr="Method - Forces the next band to
	display in a new StreamFrame.
	Property of: StreamSource
	Usage: &lt;oRef&gt; .beginNewFrame() - &lt;oRef&gt;  = StreamSource">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="begintrans" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Begins transaction logging.">
		<Param name="[&lt;databasename expC&gt; "/>
		<Param name="[&lt;isolation level expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="beginTrans" func="yes">
	<Overload retVal="{null}" descr="Method - Begins transaction logging.
	Property of: Database
	Usage: &lt;oRef&gt; .beginTrans() - &lt;oRef&gt;  = The database in which you want
	to start transaction logging.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="bintype" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the predefined type number of a specified binary field.">
		<Param name="[&lt;field name&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="bitand" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Performs a bitwise AND.">
		<Param name="&lt;int expN1&gt; "/>
		<Param name="&lt;int expN2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitlshift" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Shifts a number's bits to the left.">
		<Param name="&lt;int expN&gt; "/>
		<Param name="&lt;shift expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitnot" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Inverts the bits in a number">
		<Param name="&lt;int expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitor" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Performs a bitwise OR.">
		<Param name="&lt;int expN1&gt; "/>
		<Param name="&lt;int expN2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitrshift" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Shifts a number's bits to the right, maintaining sign.">
		<Param name="&lt;int expN&gt; "/>
		<Param name="&lt;shift expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitset" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Checks if a specified bit in a numeric value is on.">
		<Param name="&lt;int expN&gt; "/>
		<Param name="&lt;bit expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitxor" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Performs a bitwise exclusive OR.">
		<Param name="&lt;int expN1&gt; "/>
		<Param name="&lt;int expN2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="bitzrshift" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Shifts a number's bits to the right.">
		<Param name="&lt;int expN&gt; "/>
		<Param name="&lt;shift expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="blank"/>
<KeyWord name="bof" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the record pointer in a table is at the beginning of the file.">
		<Param name="[&lt;var alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="bookmark" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the current position in a rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .bookmark() - &lt;oRef&gt;  = The rowset whose current position you want to return.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns a bookmark for the current record.">
		<Param name="[&lt;var alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="bookmarksEqual" func="yes">
	<Overload retVal="{lVal}" descr="Method - Checks if a given bookmark
	matches the current row, or if two bookmarks refer to the same row.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .bookmarksEqual(&lt;bookmark1&gt;  [, &lt;bookmark2&gt; ]) - 
	&lt;oRef&gt;  = The rowset in which to check the bookmark(s).
	&lt;bookmark1&gt;  = The bookmark to check against the current row in the rowset,
	if only one bookmark is specified; or the first of two bookmarks to compare.
	&lt;bookmark2&gt;  - The second of two bookmarks to compare.">
	<Param name="&lt;bookmark1&gt; "/>
	<Param name="[&lt;bookmark2&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="browse"/>
<KeyWord name="calculate"/>
<KeyWord name="callback"/>
<KeyWord name="cancel"/>
<KeyWord name="cancel" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Cancels execution of a pending,
	asynchronous method call.
		Property of: ADODatabase, ADOQuery, ADOTable, ADOStoredProc, ADODataShape
		Usage: &lt;oRef&gt; .cancel() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="cancelBatch" func="yes">
	<Overload retVal="{null}" descr="ADOQuery Method - No Current Information
		Property of: ADOQuery
		Usage: &lt;oRef&gt; .cancelBatch() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="case" />
<KeyWord name="catch"/>
<KeyWord name="cd"/>
<KeyWord name="cdow" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns the name of the day of the week of a specified date.">
		<Param name="&lt;datetype expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ceiling" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the nearest integer that is greater than or equal to a specified number.">
		<Param name="&lt;nVar expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="center" func="yes">
	<Overload retVal="{expC}" descr="Strings - 
		Returns a character string that contains a string centered in a line of specified length.">
		<Param name="&lt;cvar expC&gt; "/>
		<Param name="[&lt;length expN&gt; "/>
		<Param name="[&lt;pad expC&gt;  ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="cerror" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the last compiler error.">
	</Overload>
</KeyWord>
<KeyWord name="change" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Returns true if another user has changed a record since it was read from disk.">
		<Param name="[&lt;var alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="changePassword" func="yes">
	<Overload retVal="{null}" descr="ADO Method - No Current Information
		Property of: ADOUser
		Usage: &lt;oRef&gt; .changePassword() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="charAt" func="yes">
	<Overload retVal="{stringVal}" descr="Method - Returns the character at
	the specified position in the string.
	Property of: String
	Usage: &lt;expC&gt; .charAt(&lt;expN&gt; ) - &lt;expC&gt;  = A string
	&lt;expN&gt;  - Index into the string, which is indexed from left to right.
	The first character of the string is at index 0 and the last character is
	at index &lt;expC&gt; .length – 1.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="charset" func="yes">
	<Overload retVal="{expC}" descr="Miscellaneous Language Elements - 
		Returns the name of the character set the current table or a specified table is using.
		If no table is open and you issue CHARSET( ) without an argument, it returns the global character set in use.">
		<Param name="[&lt;var alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="chooseprinter" func="yes">
	<Overload retVal="{null}" descr="Method - Opens a print setup
	or print dialog to allow a user to select the printer and set other
	print or report properties.
	Property of: Printer class
	Usage: &lt;oRef&gt; .choosePrinter([&lt;title expC&gt; ][, &lt;expL&gt; ]) - 
	&lt;oRef&gt;  = A reference to the printer object whose choosePrinter( ) method
	you wish to call.
	&lt;title expC&gt;  - Optional custom title for the print or printer setup dialog box.
	&lt;expL&gt;  - If true, choosePrinter( ) will display the 'Print Setup' dialog.
	If false, choosePrinter( ) will display the standard Windows 'Print' dialog.">
	<Param name="&lt;title expC&gt; "/>
	<Param name="[&lt;expL&gt; ]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Text Streaming - 
		Opens a printer setup dialog box. Returns false if you cancel out of the dialog,
		true otherwise.Description, can be multi-line">
		<Param name="[&lt;title expC&gt; ]"/>
		<Param name="[printdialog &lt;expL&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="chr" func="yes">
	<Overload retVal="{cVal}" descr="Method - Returns the character equivalent
	of a specified ASCII value.
	Property of: String
	Usage: &lt;oRef&gt; .chr(&lt;expN&gt; ) - &lt;oRef&gt;  = A reference to a String object.
	&lt;expN&gt;  - The numeric ASCII value, from 0 to 255, inclusive, whose character
	equivalent you want to return.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
	<Overload retVal="{expC}" descr="Strings - 
		Returns the character equivalent of a specified ASCII value.">
		<Param name="int &lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="class"/>
<KeyWord name="clear"/>
<KeyWord name="clear" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Clears the contents of the stream object.
		Property of: ADOStream
		Usage: &lt;oRef&gt;.clear() - &lt;oRef&gt;  = The stream object whose the contents to clear.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="clearFilter" func="yes">
	<Overload retVal="{null}" descr="Method - Clears any active filter on a rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .clearFilter() - &lt;oRef&gt;  = The rowset whose filter to clear.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="clearRange" func="yes">
	<Overload retVal="{null}" descr="Method - Clears any active range on a rowset.
	Property of: Rowset
	Usage: &lt;oRef&gt; .clearRange() - &lt;oRef&gt;  = The rowset whose range to clear.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="clearTics" func="yes">
	<Overload retVal="{null}" descr="Method - Clears manually-set
	tic marks	in a Slider object.
	Property of: Slider
	Usage: &lt;oRef&gt; .clearTics(&lt;expN&gt; ) - &lt;oRef&gt;  = The Slider object whose tics to clear.
	&lt;expN&gt;  - A numeric value, or an expression which evaluates to a numeric value.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="clone" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Creates a duplicate rowset.
		Property of: ADORowset
		Usage: &lt;oRef&gt; .clone() - &lt;oRef&gt;  = The rowset object to be cloned.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="close" func="yes">
	<Overload retVal="{lVal}" descr="Method - Closes a form.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .close([expX]) - &lt;oRef&gt;  = An object reference to the form to close.
	[expX] - An optional value to be returned by a form opened with readModal( )">
	<Param name="[expX]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Method - Closes a file previously
	opened with create( ) or open( ).
	Property of: File
	Usage: &lt;oRef&gt; .close() - &lt;oRef&gt;  = A reference to the File object
	that created or opened the file.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Closes a database connection.
	Property of: Database
	Usage: This method is called implicitly by the Database object.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="cmonth" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns the name of the month of a specified date.">
		<Param name="datetype &lt;expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="commit" func="yes">
	<Overload retVal="{null}" descr="Method - Clears the transaction log, committing all logged changes
	Property of: Database
	Usage: &lt;oRef&gt; .commit() - &lt;oRef&gt;  = The database whose changes you want to commit.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Clears the transaction log, committing all logged changes.">
		<Param name="[&lt;database name expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="compare" func="yes">
	<Overload retVal="{null}" descr="ADO Method - No Current Information
		Property of: ADOTableDef
		Usage: &lt;oRef&gt; .compare() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="continue"/>
<KeyWord name="copy"/>
<KeyWord name="copy" func="yes">
	<Overload retVal="{null}" descr="Method - Copies selected text to the Windows clipboard.
	Property of: Browse, ComboBox, Editor, Entryfield, SpinBox
	Usage: &lt;oRef&gt; .copy() - &lt;oRef&gt;  = An object reference to the control from which to copy
	the text.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Duplicates a specified file.
	Property of: File
	Usage: &lt;oRef&gt; .copy(&lt;filename expC&gt; , &lt;new name expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - Identifies the file to duplicate (also known as the source file).
	&lt;new name expC&gt;  - Identifies the target file that will be created or overwritten by copy( ).">
	<Param name="&lt;filename expC&gt; "/>
	<Param name="&lt;new name expC&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Copies a rowset or table to a new table.
	Property of: UpdateSet
	Usage: &lt;oRef&gt; .copy() - &lt;oRef&gt;  = The UpdateSet object that describes the copy.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="copyTable" func="yes">
	<Overload retVal="{null}" descr="Method - Makes a copy of one table
	to create another table in the same database.
	Property of: Database
	Usage: &lt;oRef&gt; .copyTable(&lt;source table expC&gt; , &lt;destination table expC&gt; ) - 
	&lt;oRef&gt;  = The database in which you want to copy the table.
	&lt;source table expC&gt;  - The name of the table you want to duplicate.
	&lt;destination table expC&gt;  - The name of the table you want to create.">
	<Param name="&lt;source table expC&gt; "/>
	<Param name="&lt;destination table expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="copyToFile" func="yes">
	<Overload retVal="{null}" descr="Method - Copies the contents of a BLOB field to a new file.
	Property of: Field
	Usage: &lt;oRef&gt; .copyToFile(&lt;file name expC&gt; ) - &lt;oRef&gt;  = The BLOB field to copy.
	&lt;file name expC&gt;  - The name of the file you want to create.">
	<Param name="&lt;file name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="copyToStream" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Copies the binary contents
	to another stream object.
		Property of: ADOStream
		Usage: &lt;oRef&gt; .copyToStream(&lt;stream expO&gt; [,&lt;num expN&gt; ]) - 
		&lt;oRef&gt;  = The stream object to be copied.
		&lt;stream expO&gt;  - The reference to the another stream object.
		[&lt;num expN&gt; ] - The number of characters or bytes to be copied from the current
		position in the source stream to the destination stream.
		If omitted, all characters or bytes are copied from the current position to EOS.">
		<Param name="&lt;stream expO&gt; "/>
		<Param name="[&lt;num expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="cos" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the trigonometric cosine of an angle.">
		<Param name="nVal &lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="count" func="yes">
	<Overload retVal="{nVal}" descr="LocalSQL - 
		Count(),for counting the number of values in a column that match specified criteria">
		<Param name="column_name expC"/>
	</Overload>
	<Overload retVal="{}" descr="Xbase Command - Counts the number of records that match specified conditions. See OLH.">
		<Param name="[&lt;scope&gt; ]"/>
		<Param name="[FOR &lt;condition 1&gt; ]"/>
		<Param name="[WHILE &lt;condition 2&gt; ]"/>
		<Param name="[TO &lt;memvar&gt; ]"/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - Returns the number of rows
	in a rowset, respecting any filter conditions and events.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .count() - &lt;oRef&gt;  = The rowset you want to measure">
	<Param name=""/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - Returns the number of prompts
	in a listbox, or the number of items in a tree.
	Property of: ListBox, TreeView
	Usage: &lt;oRef&gt; .count() - &lt;oRef&gt;  = An object reference to the
	listbox or tree whose items to count.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - Returns the number of elements
	in an associative array.
	Property of: AssocArray
	Usage: &lt;oRef&gt; .count() - &lt;oRef&gt;  = &lt;object referred to&gt; ">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="create" func="yes">
	<Overload retVal="{null}" descr="Method - Creates and opens a specified file.
	Property of: File
	Usage: &lt;oRef&gt; .create(&lt;filename expC&gt; [, &lt;access expC&gt; ]) - 
	&lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to create and open.
	[&lt;access expC&gt; ] - The access level of the file to create, as shown in the OLH.">
	<Param name="&lt;filename expC&gt; "/>
	<Param name="[&lt;access expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="createCatalog" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Creates a new catalog for a new database
		Property of: ADODatabase
		Usage: &lt;oRef&gt; .createCatalog([&lt;string expC&gt; ]) - 
		&lt;oRef&gt;  = The database in which you want to create catalog.
		[&lt;string expC&gt; ] - Optional, the connection string for not existing yet database.">
		<Param name="[&lt;string expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="createDate" func="yes">
	<Overload retVal="{dVal}" descr="Method - Returns the date a file was created.
	Property of: File
	Usage: &lt;oRef&gt;.createDate(&lt;filename expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to check.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="createIndex" func="yes">
	<Overload retVal="{null}" descr="Method - The createIndex( ) method
	creates an index for a specified table. See OLH for futher details.
	Property of: Database
	Usage: createIndex (&lt;tablename expC&gt; ,&lt;oRef&gt; ) - 
	&lt;tablename expC&gt;  = The name of the table on which you want to create the index.
	&lt;oRef&gt;  - Predefined .dbf index object">
	<Param name="&lt;tablename expC&gt; "/>
	<Param name="&lt;oRef&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="createTime" func="yes">
	<Overload retVal="{tVal}" descr="Method - Returns the time a file was created.
	Property of: File
	Usage: &lt;oRef&gt; .createTime(&lt;filename expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to check.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ctod" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time - 
		Interprets a specified character expression as a literal date.">
		<Param name="cDate &lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ctodt" func="yes">
	<Overload retVal="{dtVal}" descr="Date and Time - 
		'Character to DateTime' converts a literal DateTime string to a DateTime (DT) value.">
		<Param name="cDateTime &lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ctot" func="yes">
	<Overload retVal="{tVal}" descr="Date and Time - 
		'Character to TIME'( ) converts a literal Time string to a Time value.">
		<Param name="cDateTime &lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="cut" func="yes">
	<Overload retVal="{null}" descr="Method - Cuts selected
	text and places it on the Windows Clipboard.
	Property of: Browse, ComboBox, Editor, Entryfield, SpinBox
	Usage: &lt;oRef&gt; .cut() - 
	&lt;oRef&gt;  = An object reference to the control from which to cut the text.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="database" func="yes">
	<Overload retVal="{expC}" descr="Xbase - 
		Returns the name of the current database from which tables are accessed.">
	</Overload>
</KeyWord>
<KeyWord name="date" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time - 
		Returns the system date.">
	</Overload>
</KeyWord>
<KeyWord name="datetime" func="yes">
	<Overload retVal="{dtVal}" descr="Date and Time - 
		Returns a value representing the current date and time.">
	</Overload>
</KeyWord>
<KeyWord name="day" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the numeric value of the day of the month for a specified date.">
		<Param name="dDate expD"/>
	</Overload>
</KeyWord>
<KeyWord name="dbase_suppress_startup_dialogs"/>
<KeyWord name="dberror" func="yes">
	<Overload retVal="{eVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the last BDE error.">
	</Overload>
</KeyWord>
<KeyWord name="dbf" func="yes">
	<Overload retVal="{expC}" descr="Xbase - 
		Returns the name of a table open in the current or a specified work area.">
		<Param name="[var &lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="dbmessage" func="yes">
	<Overload retVal="{eVal}" descr="Miscellaneous Language Elements - 
		Returns the error message of the last BDE error.">
	</Overload>
</KeyWord>
<KeyWord name="declare"/>
<KeyWord name="define"/>
<KeyWord name="delete"/>
<KeyWord name="delete" func="yes">
	<Overload retVal="{null}" descr="Method - Deletes the current row.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .delete() - &lt;oRef&gt;  = The rowset whose current row you want to delete.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Deletes an element from
	a one-dimensional array, or deletes a row or column of elements
	from a two-dimensional array. 
	Property of: Array
	Usage: &lt;oRef&gt; .delete(&lt;position expN&gt;  [, &lt;row/column expN&gt; ]) - 
	&lt;oRef&gt;  = A reference to the one- or two-dimensional
	array from which you want to delete data.
	&lt;position expN&gt;  - When the array is a one-dimensional array, &lt;position expN&gt; 
	specifies the number of the element to delete.
	When the array is a two-dimensional array, &lt;position expN&gt;  specifies the number
	of the row or column whose elements you want to delete.
	[&lt;row/column expN&gt; ] - Either 1 or 2. If you omit this argument or specify 1,
	a row is deleted from a two-dimensional array. If you specify 2, a column is deleted.">
	<Param name="&lt;position expN&gt; "/>
	<Param name="&lt;row/column expN&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Removes a file from a disk,
	optionally sending it to the Recycle Bin.
	Property of: File
	Usage: &lt;oRef&gt; .delete(&lt;filename expC&gt;  [, &lt;recycle expL&gt; ]) - 
	&lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - Identifies the file to remove.
	[&lt;recycle expL&gt; ] - Whether to send the file to the Recycle Bin instead of deleting it.
	If omitted, the file is deleted.">
	<Param name="&lt;filename expC&gt; "/>
	<Param name="[&lt;recycle expL&gt; ]"/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Deletes the rows in the destination
	that are listed in the source.
	Property of: UpdateSet
	Usage: &lt;oRef&gt; .delete() - &lt;oRef&gt;  = The UpdateSet object that describes the delete.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="deleted" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the current record is marked as deleted.">
		<Param name="[var &lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="descending" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified index is in descending order.">
		<Param name="[&lt;.mdxfilename expC&gt;]"/>
		<Param name="[&lt;indexposition expN&gt;"/>
		<Param name="[var &lt;alias&gt;]]"/>
	</Overload>
</KeyWord>
<KeyWord name="detach" func="yes">
	<Overload retVal="{null}" descr="Method - Breaks links between a toolbar and a form.
	Property of: Toolbar
	Usage: &lt;toRef&gt; .detach(&lt;oRef&gt; ) - &lt;toRef&gt;  = An object reference to the toolbar.
	&lt;oRef&gt;  - An object reference to the form.">
	<Param name="&lt;oRef&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="difference" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns a number that represents the phonetic difference between two strings.">
		<Param name="&lt;string expC1&gt; "/>
		<Param name="&lt;string expC2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dir"/>
<KeyWord name="dir" func="yes">
	<Overload retVal="{nVal}" descr="Method - Fills the array with five
	characteristics of specified files: name, size, modified date, modified time,
	and file attribute(s).
	Returns the number of files whose characteristics are stored. See OLH.
	Property of: Array
	Usage: &lt;oRef&gt; .dir([&lt;filename skeleton expC&gt;  [, &lt;DOS file attribute list expC&gt; ]]) - 
	&lt;oRef&gt;  = A reference to the array in which you want to store the file information.
	[&lt;filename skeleton expC&gt;  - The file-name pattern (using wildcards) describing
	the files whose information you want to store to &lt;oRef&gt; .
	[&lt;DOS file attribute list expC&gt; ]] - The letter or letters D, H, S, and/or V
	representing one or more file attributes.">
	<Param name="[&lt;filename skeleton expC&gt; "/>
	<Param name="[&lt;DOS file attribute list expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="dirExt" func="yes">
	<Overload retVal="{nVal}" descr="Method - dirExt( ) is
	an extended version of the dir( ) method. It fills the array with nine
	characteristics of specified files: name, size, modified date, modified time,
	file attribute(s), short (8.3) file name, create date, create time,
	and access date.
	Returns the number of files whose characteristics are stored. See OLH.
	Property of: Array
	Usage: &lt;oRef&gt; .dirExt([&lt;filename skeleton expC&gt;  [, &lt;file attribute list expC&gt; ]]) - 
	&lt;oRef&gt;  = A reference to the array in which you want to store the file information.
	[&lt;filename skeleton expC&gt;  - The file-name pattern (using wildcards) describing
	the files whose information you want to store to &lt;oRef&gt; .
	[&lt;file attribute list expC&gt; ]] - The letter or letters D, H, S, and/or V
	representing one or more file attributes.">
	<Param name="[&lt;filename skeleton expC&gt; "/>
	<Param name="[&lt;file attribute list expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="diskspace" func="yes">
	<Overload retVal="{nVal}" descr="Files and Operating System - 
		Returns the number of bytes available on the current or specified drive's disk.">
		<Param name="[&lt;drive expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="display"/>
<KeyWord name="dny" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns a specified date as a character string in DD MONTH YY or DD MONTH YYYY format.">
		<Param name="&lt;dDate expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="do"/>
<KeyWord name="dos"/>
<KeyWord name="doVerb" func="yes">
	<Overload retVal="{null}" descr="Method - Starts an action in an OLE server application.
	Property of: OLE
	Usage: &lt;oRef&gt; .doVerb(&lt;verb expN&gt;  [, &lt;title expC&gt; ]) - 
	&lt;oRef&gt;  = The OLE control that contains the linked or embedded object.
	&lt;verb expN&gt;  - The numeric value of the OLE verb.
	[&lt;title expC&gt; ] - An optional text string to display in the title bar
	of the server window.">
	<Param name="&lt;verb expN&gt; "/>
	<Param name="[&lt;title expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="dow" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the day of the week corresponding to a specified date as a number from 1 to 7.">
		<Param name="&lt;dDate expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="drag" func="yes">
	<Overload retVal="{lVal}" descr="Method - Initiates a Drag&amp;Drop Copy
	or Move operation for a dBASE UI object.
	Property of: Many Form objects
	Usage: &lt;oRef&gt; .drag(&lt;type expc&gt; , &lt;name expC&gt; , &lt;icon expC&gt; ) - 
	&lt;oRef&gt;  = The object to be copied or moved.
	&lt;type expc&gt;  - A string, typically identifying the object's type.
	&lt;name expC&gt;  - A string, typically containing the name of the object.
	&lt;icon expC&gt;  - The filename of a cursor icon to be displayed while the object
	is being dragged. This parameter is required, but is currently unused.
	The default Windows OLE cursor will be displayed.">
	<Param name="&lt;type expc&gt; "/>
	<Param name="&lt;name expC&gt; "/>
	<Param name="&lt;icon expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dropIndex" func="yes">
	<Overload retVal="{null}" descr="Method - The dropIndex( ) method
	deletes an index for a specified table
	Property of: Database
	Usage: &lt;oRef&gt; .dropIndex (&lt;tablename expC&gt; ,&lt;indexName expC&gt; ) - 
	&lt;oRef&gt;  = The database in which the table exists.
	&lt;tablename expC&gt;  - The name of the table containing the index
	&lt;indexName expC&gt;  - The index tag name">
	<Param name="&lt;tablename expC&gt; "/>
	<Param name="&lt;indexName expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dropTable" func="yes">
	<Overload retVal="{null}" descr="Method - Deletes (drops) a table from a database.
	Property of: Database
	Usage: &lt;oRef&gt; .dropTable(&lt;table name expC&gt; ) - 
	&lt;oRef&gt;  = The database in which the table exists.
	&lt;table name expC&gt;  - The name of the table you want to delete.">
	<Param name="&lt;table name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dtoc" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Converts a date into a literal date string.">
		<Param name="&lt;dDate expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dtodt" func="yes">
	<Overload retVal="{dtVal}" descr="Date and Time - 
		'Date to DateTime' converts a date to a DateTime value (DT).">
		<Param name="&lt;dDate expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dtor" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the radian value of an angle whose measurement is given in degrees.">
		<Param name="&lt;nVar expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dtos" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		Returns a specified date as a character string in YYYYMMDD format.">
		<Param name="&lt;dDate expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dttoc" func="yes">
	<Overload retVal="{expC}" descr="Date and Time - 
		'DateTime to Character' converts a DateTime value to a literal DateTime string.">
		<Param name="&lt;dtVar expDT&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dttod" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time - 
		'DateTime to Date' converts the date component of a DateTime value to a literal Date .">
		<Param name="&lt;dtVar expDT&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="dttot" func="yes">
	<Overload retVal="{tVal}" descr="Date and Time - 
		'DateTime to Time' converts the time component of a DateTime value to a Time value .">
		<Param name="&lt;dtVar expDT&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="edit"/>
<KeyWord name="eject"/>
<KeyWord name="ejectpage"/>
<KeyWord name="elapsed" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the number of seconds elapsed between two specified times.">
		<Param name="&lt;stoptime expC&gt; "/>
		<Param name="&lt;starttime expC&gt; "/>
		<Param name="[&lt;dummy exp&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="element" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the number of a specified
	element in a one- or two-dimensional array.
	Property of: Array
	Usage: &lt;oRef&gt; .element(&lt;subscript1 expN&gt;  [, &lt;subscript2 expN&gt; ]) - 
	&lt;oRef&gt;  = A reference to a one- or two-dimensional array.
	&lt;subscript1 expN&gt;  - The first subscript of the element. In a one-dimensional array,
	this is the same as the element number. In a two-dimensional array, this is the row.
	[&lt;subscript2 expN&gt; ] - When &lt;oRef&gt;  is a two-dimensional array, &lt;subscript2 expN&gt; 
	specifies the second subscript, or column, of the element. If &lt;oRef&gt;  is a
	two-dimensional array and you do not specify a value for &lt;subscript2 expN&gt; ,
	dBASE assumes the value 1, the first column in the row.">
	<Param name="&lt;subscript1 expN&gt; "/>
	<Param name="[&lt;subscript2 expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="else"/>
<KeyWord name="elseif"/>
<KeyWord name="empty" func="yes">
	<Overload retVal="{lVal}" descr="Core Language - 
		Returns true if a specified expression is empty.">
		<Param name="&lt;anyVar exp&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="emptyTable" func="yes">
	<Overload retVal="{null}" descr="Method - Deletes all the rows in a table.
	Property of: Database
	Usage: &lt;oRef&gt; .emptyTable(&lt;table name expC&gt; ) - 
	&lt;oRef&gt;  = The database in which the table exists.
	&lt;table name expC&gt;  - The name of the table you want to empty.">
	<Param name="&lt;table name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="endfor"/>
<KeyWord name="endif"/>
<KeyWord name="endprintjob"/>
<KeyWord name="endtry"/>
<KeyWord name="endwith"/>
<KeyWord name="ensureVisible" func="yes">
	<Overload retVal="{null}" descr="Method - Makes the tree item visible in the tree view.
	Property of: TreeItem
	Usage: &lt;oRef&gt; .ensureVisible() - &lt;oRef&gt;  = An object reference
	to the tree item you want to display.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="enumerate" func="yes">
	<Overload retVal="{assocArray}" descr="Core Language - 
		Returns a listing of the member names of an object.">
		<Param name="&lt;oVar oRef&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="eof" func="yes">
	<Overload retVal="{null}" descr="Method - Returns true if the file
	pointer is at the end of a file previously opened with create( ) or open( )
	Property of: File
	Usage: &lt;oRef&gt; .eof() - &lt;oRef&gt;  = A reference to the File object
	that created or opened the file.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the record pointer is at the end-of-file.">
		<Param name="[&lt;var alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="erase"/>
<KeyWord name="error" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the error number of the most
	recent byte-level input or output error, or 0 if the most recent byte-level method
	was successful.
	Property of: File
	Usage: &lt;oRef&gt; .error() - &lt;oRef&gt;  = A reference to the File object that attempted
	the operation.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the most recent dBASE Plus error.">
	</Overload>
</KeyWord>
<KeyWord name="execute" func="yes">
	<Overload retVal="{null}" descr="Method - Executes a query or stored procedure.
	Property of: Query, StoredProc
	Usage: This method is called implicitly by the Query or StoredProc object.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Sends a command string to a DDE server
	application in its own language.
	Property of: DDELink
	Usage: &lt;oRef&gt; .execute(&lt;cmd expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the DDELink object that has the link.
	&lt;cmd expC&gt;  - Command or macro to send to the DDE server application.">
	<Param name="&lt;cmd expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="executeMessages" func="yes">
	<Overload retVal="{null}" descr="Method - Use the executeMessages( ) method	to 
	periodically process pending messages while running a lengthy processing routine.
	Property of: _app
	Usage: &lt;oRef&gt; .executeMessages() - &lt;oRef&gt;  = A reference to the _app object">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="executeSQL" func="yes">
	<Overload retVal="{null}" descr="Method - Executes the specified SQL statement.
	Property of: &lt;Object&gt; 
	Usage: &lt;oRef&gt; .executeSQL(&lt;SQL expC&gt; ) - 
	&lt;oRef&gt;  = The database in which you want to execute the SQL statement.
	&lt;SQL expC&gt;  - The SQL statement.">
	<Param name="&lt;SQL expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="exists" func="yes">
	<Overload retVal="{lVal}" descr="Method - Tests for the existence of a file.
	Returns true if the file exists and false if it doesn’t.
	Property of: File
	Usage: &lt;oRef&gt; .exists(&lt;filename expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to search for.
	Wildcard characters are not allowed; you must specify the actual file name.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="exit"/>
<KeyWord name="exp" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns e raised to a specified power.">
		<Param name="&lt;nVar expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="extern"/>
<KeyWord name="extract" func="yes">
	<Overload retVal="{retVal}" descr="LocalSQL - 
		Local SQL supports the EXTRACT( ) function for isolating a single numeric field
	from a date/time field on retrieval using the following syntax: EXTRACT (&lt;extract field&gt;  FROM &lt;field name&gt; )">
	</Overload>
</KeyWord>
<KeyWord name="faccessdate" func="yes">
    <Overload retVal="{dVal}" descr="File Information Functions - 
		Returns the last date a file was opened.">
        <Param name="&lt;filename expC&gt; "/>
    </Overload>
</KeyWord>
<KeyWord name="fclose" func="yes">
	<Overload retVal="{lVal}" descr="Low-level File Functions - 
		Closes a file previously opened with FCREATE()">
		<Param name="&lt;filehandle expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fcount" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of fields in a table.">
		<Param name="&lt;var alias&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fcreate" func="yes">
	<Overload retVal="{filehandle}" descr="Low-level File Functions - 
		Creates and opens a specified file.">
		<Param name="&lt;filename expC&gt; "/>
		<Param name=">[&lt;access expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fcreatedate" func="yes">
	<Overload retVal="{dVal}" descr="File Information Functions - 
		Returns the date a file was created.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fcreatetime" func="yes">
	<Overload retVal="{tVal}" descr="File Information Functions - 
		Returns the time a file was created.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fdate" func="yes">
	<Overload retVal="{dVal}" descr="File Information Functions - 
		Returns the date stamp for a file, the date the file was last modified.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fdecimal" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of decimal places in a specified field of a table.">
		<Param name="&lt;fieldnumber expN&gt; "/>
		<Param name="[&lt;var alias&gt; ])"/>
	</Overload>
</KeyWord>
<KeyWord name="feof" func="yes">
	<Overload retVal="{lVal}" descr="Low-level File Functions - 
		Returns true if the file pointer is at the end of a file
	previously opened with FCREATE() or FOPEN()">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ferror" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Returns the error number of the most recent byte-level input or output error,
	or 0 if the most recent byte-level method was successful. Used in a TRY and CATCH block to get the error number. See OLH">
	</Overload>
</KeyWord>
<KeyWord name="fflush" func="yes">
	<Overload retVal="{lVal}" descr="Low-level File Functions - 
		Writes to disk a file previously opened with
	FCREATE() or FOPEN() without closing the file. Returns true if successful and false if unsuccessful.">
		<Param name="&lt;filehandle expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fgets" func="yes">
	<Overload retVal="{expC}" descr="Low-level File Functions - 
		Returns a line of text from a file previously opened with FCREATE() or FOPEN().">
		<Param name="&lt;filehandle expN&gt; "/>
		<Param name="&lt;characters expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="field" func="yes">
	<Overload retVal="{cVal}" descr="Xbase - 
		Returns the name of the field in a specified position of a table.">
		<Param name="&lt;fieldnumber expN&gt; "/>
		<Param name=" [&lt;var alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fields" func="yes">
	<Overload retVal="{nVal}" descr="Method - Fills the array with the current table's
	structural information. Returns the number of fields whose characteristics are stored.
	Property of: Array
	Usage: &lt;oRef&gt; .fields() - &lt;oRef&gt;  = A reference to the array
	in which you want to store the field information.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="file" func="yes">
	<Overload retVal="{lVal}" descr="Files and Operating System - 
		Tests for the existence of a file. Returns true if the file exists and false if it doesn't.
	Both options need to be enclosed in quotes">
		<Param name="&lt;filename expC&gt;  | :&lt;sourceAlias&gt; :filename expC"/>
	</Overload>
</KeyWord>
<KeyWord name="fill" func="yes">
	<Overload retVal="{nVal}" descr="Method - Stores a specified value into one
	or more locations in an array, and returns the number of elements stored.
	Property of: Array
	Usage: &lt;oRef&gt; .fill(&lt;exp&gt;  [, &lt;start expN&gt;  [, &lt;count expN&gt; ]]) - 
	&lt;oRef&gt;  = A reference to a one- or two-dimensional array you want to
	fill with the specified value &lt;exp&gt; .
	&lt;exp&gt;  - An expression you want to store in the specified array.
	[&lt;start expN&gt;  - The element number at which you want to begin storing &lt;exp&gt; .
	If you do not specify &lt;start expN&gt; , dBASE begins at the first element in the array.
	[&lt;count expN&gt; ]]The number of elements in which you want to store &lt;exp&gt; ,
	starting at element &lt;start expN&gt; . If you do not specify &lt;count expN&gt; ,
	dBASE stores &lt;exp&gt;  from &lt;start expN&gt;  to the last element in the array.
	If you want to specify a value for &lt;count expN&gt; , you must also specify a value
	for &lt;start expN&gt; .
	If you do not specify &lt;start expN&gt;  or &lt;count expN&gt; , dBASE fills all elements
	in the array with &lt;exp&gt; .">
	<Param name="&lt;exp&gt; "/>
	<Param name="[&lt;start expN&gt;  "/>
	<Param name="[&lt;count expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="finally"/>
<KeyWord name="find" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Unsure of availability
		Property of: ADOChapterArray
		Usage: &lt;oRef&gt; .find(&lt;code expC&gt; ) - &lt;oRef&gt;  = ADOChapterArray.">
		<Param name="&lt;code expC&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - currently unavailable
		Property of: ADOErrorArray
		Usage: &lt;oRef&gt; .find(&lt;code expC&gt; ) - &lt;oRef&gt;  = ADOErrorArray.">
		<Param name="&lt;code expC&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - Unsure of availability
		Property of: ADOParameterArray
		Usage: &lt;oRef&gt; .find(&lt;name expC&gt; ) - &lt;oRef&gt;  = ADOParameterArray.">
		<Param name="&lt;name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="findKey" func="yes">
	<Overload retVal="{lVal}" descr="Method - Finds the row with the exact matching key value.
	Property of: Rowset
	Usage: &lt;oRef&gt; .findKey(&lt;exp&gt;  | &lt;exp list&gt; ) - 
	&lt;oRef&gt;  = The Rowset in which to do the search.
	&lt;exp&gt;  | - The value to search for.
	&lt;exp list&gt;  - One or more expressions, separated by commas,
	to search for in a simple or composite key index for non-DBF tables.">
	<Param name="&lt;exp&gt;  |"/>
	<Param name="&lt;exp list&gt; "/>
	</Overload>
	<Overload retVal="{lVal}" descr="Method - Finds the row with the exact
	matching key value. Documentation is sketchy if acccurate at all. (sorry)
	Property of: ADORowset
	Usage: &lt;oRef&gt; .findKey(&lt;key exp&gt;  | &lt;keys expA&gt; ) - 
	&lt;oRef&gt;  = ADORowset in which to do the search
	&lt;key exp&gt;  | - The value to search for.
	&lt;keys expA&gt;  - The values in an Array(?) to search for.">
	<Param name="&lt;key exp&gt;  | &lt;keys expA&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="findKeyNearest" func="yes">
	<Overload retVal="{lVal}" descr="Method - Finds the row
	with the nearest matching key value.
	Property of: Rowset
	Usage: &lt;oRef&gt; .findKeyNearest(&lt;exp&gt;  | &lt;exp list&gt; ) - 
	&lt;oRef&gt;  = The Rowset in which to do the search.
	&lt;exp&gt;  | - The value to search for.
	&lt;exp list&gt;  - One or more expressions, separated by commas,
	to search for in a simple or composite key index for non-DBF tables.">
	<Param name="&lt;exp&gt;  | &lt;exp list&gt; "/>
	</Overload>
	<Overload retVal="{lVal}" descr="Method - Finds the row with the
	nearest matching key value. Documentation is sketch if accurate at all. (Sorry)
	Property of: ADORowset
	Usage: &lt;oRef&gt; .findKeyNearest(&lt;key exp&gt;  | &lt;keys expA&gt; ) - 
	&lt;oRef&gt;  = ADORowset in which to do the search
	&lt;key exp&gt;  | - The value to search for.
	&lt;keys expA&gt;  - The values in an Array(?) to search for.">
	<Param name="&lt;key exp&gt; | &lt;keys expA&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="findinstance" func="yes">
	<Overload retVal="{oRef}" descr="Core Language - 
		Returns an object of the specified class from the object heap.">
		<Param name="&lt;classname expC&gt; "/>
		<Param name="[&lt;previous oRef&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="first" func="yes">
	<Overload retVal="{null}" descr="Method - Moves the row cursor to
	the first row in the rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .first() - &lt;oRef&gt;  = The rowset in which you want to move the row cursor.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="firstRow" func="yes">
	<Overload retVal="{bookmarkVal}" descr="Method - Returns a bookmark
	for the row currently displayed in the first row of the grid.
	Property of: Grid
	Usage: &lt;oRef&gt; .firstRow() - &lt;oRef&gt;  = A reference to a grid object.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="fldcount" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of fields in a table. Same as FCOUNT()">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fldlist" func="yes">
	<Overload retVal="{fieldList}" descr="Xbase - 
		Returns the fields and calculated field expressions of a SET FIELDS TO list.">
		<Param name="[&lt;field number expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="flength" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the length of the field in a specified position of a table.">
		<Param name="&lt;field number expN&gt; "/>
		<Param name=" [&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="flock" func="yes">
	<Overload retVal="{retVal}" descr="Xbase - 
		Locks a table.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="floor" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the nearest integer that is less than or equal to a specified number.">
		<Param name="&lt;nVar expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="flush"/>
<KeyWord name="flush" func="yes">
	<Overload retVal="{lVal}" descr="Method - Writes to disk a file
	previously opened with create( ) or open( ) without closing
	the file. Returns true if successful and false if unsuccessful.
	Property of: File
	Usage: &lt;oRef&gt; .flush() - &lt;oRef&gt;  = A reference to the File object
	that created or opened the file.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Commits data buffers to disk.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .flush() - &lt;oRef&gt;  = The rowset you want to write to disk.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Sends the contents of the stream buffer
	to the associated underlying object.Not well documented if operational.
	Property of: ADOStream
	Usage: &lt;oRef&gt; .flush() - &lt;oRef&gt;  = The stream object">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="fnamemax" func="yes">
	<Overload retVal="{nVal}" descr="Files and Operating System - 
		Returns the maximum allowable file-name length on a given drive or volume.">
		<Param name=" [&lt;filename expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fopen" func="yes">
	   <Overload retVal="{filehandle}" descr="Low-level File Functions - 
		Opens a specified file.">
		   <Param name="&lt;filename expC&gt; "/>
		   <Param name="&lt;access expC&gt; "/>
	   </Overload>
</KeyWord>
<KeyWord name="for" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the FOR clause of a specified index tag.">
		<Param name="[&lt;.mdxfilename expC&gt;]"/>
		<Param name="[&lt;indexposition expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
	<Overload retVal="{}" descr="Language Definition - Control Statements - Part of a FOR/ENDFOR Loop construct.">
	</Overload>
</KeyWord>
<KeyWord name="found" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if the last-issued search command found a match.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fputs" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Writes a character string, and one or two end-of-line characters,
	to a file previously opened with FCREATE() or FOPEN(). Returns the number of characters written.">
		<Param name="&lt;filehandle expC&gt; "/>
		<Param name="&lt;string expC&gt; "/>
		<Param name="[&lt;characters expN&gt; "/>
		<Param name="[&lt;end-of-line expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="fread" func="yes">
	<Overload retVal="{stringVal}" descr="Low-level File Functions - 
		Returns a specified number of characters
	from a file previously opened with FCREATE() or FOPEN().">
		<Param name="&lt;filehandle expC&gt; "/>
		<Param name="&lt;characters expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="from"/>
<KeyWord name="fseek" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Moves the file pointer in a file previously opened with FCREATE() or FOPEN(),
	and returns the new position of the file pointer.">
		<Param name="&lt;filehandle expC&gt; "/>
		<Param name="&lt;offset expN&gt; "/>
		<Param name="[&lt;position expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fshortname" func="yes">
	<Overload retVal="{stringVal}" descr="File Information Functions - 
		Returns the short (8.3) name of a file.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fsize" func="yes">
	<Overload retVal="{nVal}" descr="File Information Functions - 
		Returns the size of a file in bytes.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ftime" func="yes">
	<Overload retVal="{tVal}" descr="File Information Functions - 
		Returns the time stamp for a file, the time the file was last modified.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="function"/>
<KeyWord name="funique" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Creates a unique file name. Read Documentation for usage">
		<Param name="[&lt;filenameskeleton expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="fv" func="yes">
	<Overload retVal="{floatVal}" descr="Math/Money - 
		Returns the future value of an investment.">
		<Param name="&lt;payment expN&gt; "/>
		<Param name="&lt;interest expN&gt; "/>
		<Param name="&lt;term expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="fwrite" func="yes">
	<Overload retVal="{nVal}" descr="Low-level File Functions - 
		Writes a character string to a file previously opened
	with FCREATE() or FOPEN(). Returns the number of characters written.">
		<Param name="&lt;filehandle expC&gt; "/>
		<Param name="&lt;stringVal expC&gt; "/>
		<Param name="[&lt;characters expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="generate"/>
<KeyWord name="getByte" func="yes">
	<Overload retVal="{byteVal}" descr="Method - Returns the value of the byte
	at the specified index in the string.
	Property of: String
	Usage: &lt;oRef&gt; .getByte(&lt;index expN&gt; ) - 
	&lt;oRef&gt;  = A reference to the String object that you’re using as a structure.
	&lt;index expN&gt;  - The index number of the desired byte. The first byte is at 
	index number zero.">
	<Param name="&lt;index expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="getcalladdress"/>
<KeyWord name="getcolor" func="yes">
	<Overload retVal="{stringVal}" descr="Application Shell - 
		Calls a dialog box in which you can define a custom color or select a color
	from the color palette. Returns a character string containing the red, green, and blue values for the color selected.">
		<Param name="[&lt;title expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="getColumnObject" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns a reference to the
	GridColumn object for a designated column
	Property of: Grid
	Usage: &lt;oRef&gt; .getColumnObject(&lt;exp N&gt; ) - &lt;oRef&gt;  = The name of the Grid object.
	&lt;exp N&gt;  - An integer representing the column position. 
	For the leftmost column in a grid, n=1.">
	<Param name="&lt;exp N&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="getColumnOrder" func="yes">
	<Overload retVal="{arrayVal}" descr="Method - Returns a two-dimensional array,
	the columns of which are QueryName and FieldName.
	Property of: Grid
	Usage: &lt;oRef&gt; .getColumnOrder() - &lt;oRef&gt;  = The name of the Grid object.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getDate" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns the numeric value of the day of the month.
	Property of: Date
	Usage: &lt;oRef&gt; .getDate() - &lt;oRef&gt;  = The Date object whose
	corresponding day-of-the-month number you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getDay" func="yes">
	<Overload retVal="{null}" descr="Method - Returns the day
	of the week corresponding to a specified date as a number from 0 to 6.
	Property of: Date
	Usage: &lt;oRef&gt; .getDay() - &lt;oRef&gt;  = The Date object whose 
	corresponding weekday number you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getdirectory" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Displays a dialog box from which you can select a directory for use 
	with subsequent commands.">
		<Param name="[&lt;directory expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="getenv" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Returns the value of an operating system environment variable.">
		<Param name="&lt;envVar expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="getFile" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Displays a dialog box from which a user can select multiple files.
	Property of: Array
	Usage: &lt;oRef&gt;.getFile()
	- &lt;oRef&gt; = A reference to the array in which the selected filenames,
	or database aliases, will be stored.
	&lt;oRef&gt;.getfile() with no parameters brings up a general purpose dialog box.
	Parameters with empty angle brackets (&lt;&gt;) will need to have empty quotes
	if they're not being used. Filled angle brackets must be filled with value.
	See OLH.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - 
	Property of: Array
	Usage: &lt;oRef&gt;.getFile(&lt;filename skeleton expC&gt;)
	&lt;filename skeleton expC&gt; - Files to show *.*, *.prg etc">
	<Param name="[&lt;filename skeleton expC&gt;]"/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - 
	Property of: Array
	Usage: &lt;oRef&gt;.getFile([&lt;&gt;,&lt;title expC&gt;])- Titles the Dialog Box.">
	<Param name="[&lt;&gt;"/>
	<Param name="&lt;title expC&gt;]"/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - 
	Property of: Array
	Usage: &lt;oRef&gt;.getFile([&lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;]) - Database Selector true/false.">
	<Param name="[&lt;&gt;"/>
	<Param name="[&lt;&gt;"/>
	<Param name="[&lt;suppress database expL&gt;]"/>
	</Overload>
	<Overload retVal="{nVal}" descr="Method - 
	Property of: Array
	Usage: &lt;oRef&gt;.getFile([&lt;&gt;, &lt;&gt;, &lt;suppress database expL&gt;,
	&lt;file types list expC&gt; | &lt;group file name expC&gt; (&lt;file types list expC&gt;)]) - 
	- File type group selection or custom type group with file extension list.">
	<Param name="[&lt;&gt;"/>
	<Param name="[&lt;&gt;"/>
	<Param name="[&lt;suppress database expL&gt;"/>
	<Param name="[&lt;file types list expC&gt; | &lt;group file name expC&gt; (&lt;file types list expC&gt;)]"/>
	</Overload>
</KeyWord>
<KeyWord name="getfile" func="yes">
	<Overload retVal="{filename}" descr="Files and Operating System - 
		Displays a dialog box from which the user can choose,
		or enter, an existing file name, and returns this file name.
		Read Documentation for further options.
		Parameters with empty angle brackets (&lt; &gt;) will need to have empty quotes if they're not being used.
		getfile() with no parameters brings up a general purpose dialog box.">
		<Param name="[&lt;filename skeleton expC&gt;"/>
		<Param name="[&lt;title expC&gt;"/>
		<Param name="[&lt;suppress database expL&gt;]"/>
		<Param name="[&lt;file types list expC&gt; | &lt;file type group name expC&gt;(&lt;file types list expC&gt;)]]]"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		getfile(&lt;filename skeleton expC&gt;) - Files to show *.* *.prg etc">
		<Param name="&lt;filename skeleton expC&gt;" />
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		getfile( &lt; &gt;, &lt;title expC&gt;) - Title's the Dialog Box">
		<Param name="&lt; &gt;"/>
		<Param name="&lt;title expC&gt;" />
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		getfile(&lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;) - Database Selector true/false">
		<Param name="&lt; &gt;" />
		<Param name="&lt; &gt;" />
		<Param name="&lt;suppress database expL&gt;" />
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		getfile(&lt; &gt;, &lt; &gt;, &lt;suppress database expL&gt;,
		&lt;file types list expC&gt; | &lt;file type group name expC&gt;(&lt;file types list expC&gt;) )
		- File type group selection or custom type group with file extension list.">
		<Param name="&lt; &gt;" />
		<Param name="&lt; &gt;" />
		<Param name="&lt;suppress database expL&gt;" />
		<Param name="&lt;file types list expC&gt; | &lt;file type group name expC&gt;(&lt;file types list expC&gt;) " />
	</Overload>
</KeyWord>
<KeyWord name="getfont" func="yes">
	<Overload retVal="{stringVal}" descr="Application Shell - 
		Calls a dialog box in which you select a character font.
	Returns a string containing the font name, point size, font style (if you choose a style other than Regular), and family.">
		<Param name="[&lt;title expC&gt; "/>
		<Param name="[&lt;fontstr expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="getHours" func="yes">
	<Overload retVal="{null}" descr="Method - Returns the hours portion of a date object.
	Property of: Date
	Usage: &lt;oRef&gt; .getHours() - &lt;oRef&gt;  = The date object whose hours you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getItemByPos" func="yes">
	<Overload retVal="{oRefVal}" descr="Method - Returns an object reference
	to a TreeItem object located at a specified position.
	Property of: TreeView
	Usage:[&lt;oRef&gt;  =] getItemByPos( &lt;col expN&gt; , &lt;row expN&gt;  ) - 
	&lt;oRef&gt;  = A variable or property in which to store the TreeItem
	object reference returned by getItemByPos( ).
	&lt;col expN&gt;  - The horizontal position, within a TreeView object, to check for a TreeItem.
	&lt;row expN&gt;  - The vertical position, within a TreeView object, to check for a TreeItem.">
	<Param name="&lt;col expN&gt; "/>
	<Param name="&lt;row expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="getMinutes" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the minutes portion of a date object.
	Property of: Date
	Usage: &lt;oRef&gt; .getMinutes() - &lt;oRef&gt;  = The date object whose minutes you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getMonth" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the number
	of the month for a specified date.
	Property of: Date
	Usage: &lt;oRef&gt; .getMonth() - &lt;oRef&gt;  = The Date object whose
	corresponding month number you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getPermissions" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Listed, but undocumented
		Property of: ADOUser Listed, but undocumented
		Usage: &lt;oRef&gt; .getPermissions() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getSchema" func="yes">
	<Overload retVal="{arrayVal}" descr="Method - Returns information about a database.
	Property of: Database
	Usage: &lt;oRef&gt; .getSchema(&lt;item expC&gt; ) - &lt;oRef&gt;  = The database
	you want to get information about.
	&lt;item expC&gt;  - The information to retrieve, which may be one
	of the following strings (which are not case-sensitive):
	See OLH for more information">
	<Param name="&lt;item expC&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Returns information about a database.
	Property of: ADODatabase
	Usage: &lt;oRef&gt; .getSchema([&lt;schema expC&gt; ][&lt;guid expC&gt; ][,&lt;criteria expA&gt; ]) - 
	&lt;oRef&gt;  = The database you want to get information about.
	[&lt;schema expC&gt; ] - The schema type name.
	[&lt;guid expC&gt; ] - The GUID of schema.
	[&lt;criteria expA&gt; ] - Optional, the criteria for restriction columns.">
	<Param name="[&lt;schema expC&gt; ]"/>
	<Param name="[&lt;guid expC&gt; ]"/>
	<Param name="[&lt;criteria expA&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="getSeconds" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the seconds portion of a date object.
	Property of: Date
	Usage: &lt;oRef&gt; .getSeconds() - 
	&lt;oRef&gt;  = The date object whose seconds you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getTextExtent" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the length of a text string
	based on the current font settings of the Text or TextLabel control.
	Property of: Text, TextLabel
	Usage: &lt;oRef&gt; .getTextExtent(&lt;expC&gt; ) - 
	&lt;oRef&gt;  = The Text or TextLabel object used to calculate the text size.
	&lt;expC&gt;  - The string to measure">
	<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="getTime" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns time
	equivalent of date/time, in milliseconds.
	Property of: Date
	Usage: &lt;oRef&gt; .getTime() - 
	&lt;oRef&gt;  = The Date object whose time equivalent you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getTimezoneOffset" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the time zone offset
	for a date object in the current locale, in minutes.
	Property of: Date
	Usage: &lt;oRef&gt; .getTimezoneOffset() - 
	&lt;oRef&gt;  = A date object created in the locale in question.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="getYear" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the year of a specified date.
	Property of: Date
	Usage: &lt;oRef&gt; .getYear() - 
	&lt;oRef&gt;  = The Date object whose corresponding year number you want to return.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="gets" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a line of text from a file previously opened with create( ) or open( ).
	Property of: File
	Usage: &lt;oRef&gt; .gets([&lt;characters expN&gt;  [, &lt;end-of-line expC&gt; ]]) - 
	&lt;oRef&gt;  = A reference to the File object that created or opened the file.
	[&lt;characters expN&gt;  - The number of characters to read and return before
	a carriage return is reached.
	[&lt;end-of-line expC&gt; ] - The end-of-line indicator, which can be a string
	of one or two characters. If omitted, the default is a hard carriage return
	and line feed. See OLH for further options and information">
	<Param name="[&lt;characters expN"/>
	<Param name="[&lt;end-of-line expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="go"/>
<KeyWord name="goto" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Moves the row cursor to a specific row in the rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .goto(&lt;bookmark&gt; ) - 
	&lt;oRef&gt;  = The rowset in which you want to move the row cursor.
	&lt;bookmark&gt;  - The bookmark you want to move to.">
	<Param name="&lt;bookmark&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="grow" func="yes">
	<Overload retVal="{nVal}" descr="Method - Adds an element, row,
	or column to an array and returns the number of added elements.
	Property of: Array
	Usage: &lt;oRef&gt; .grow(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = A reference to a one- or two-dimensional array you want to add elements to.
	&lt;expN&gt;  - Either 1 or 2. When you specify 1, grow( ) adds a single element to
	a one-dimensional array or a row to a two-dimensional array.
	When you specify 2, grow( ) adds a column to the array.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="hasHScrollBar" func="yes">
	<Overload retVal="{lVal}" descr="Method - &lt;description&gt; 
	Property of: _app.frameWin
	Usage: &lt;oRef&gt; .hasHScrollBar() - &lt;oRef&gt;  = a reference to the _app.FrameWin object.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="hasVScrollBar" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Use the hasVScrollBar( ) method to determine if a frame window 
	is using a vertical scrollbar.
	Property of: _app.frameWin
	Usage: &lt;oRef&gt; .hasVScrollBar() - &lt;oRef&gt;  = a reference to the _app.FrameWin object.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="having"/>
<KeyWord name="home" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Returns the directory where the PLUS.exe in use is located.">
	</Overload>
</KeyWord>
<KeyWord name="htoi" func="yes">
	<Overload retVal="{nVal}" descr="Bitwise - 
		Returns the numeric value of a specified hexadecimal number.">
		<Param name="&lt;hexVal expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="id" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns the name of the current user on a local area network (LAN)
	or other multiuser system.">
	</Overload>
</KeyWord>
<KeyWord name="if"/>
<KeyWord name="ifdef" />
<KeyWord name="iif" func="yes">
	<Overload retVal="{value}" descr="Core Language - 
		Returns one of two values depending on the result of a specified logical expression.">
		<Param name="&lt;lVar expL&gt; , "/>
		<Param name="&lt;var exp1&gt; "/>
		<Param name="&lt;var exp2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ifndef" />
<KeyWord name="include" />
<KeyWord name="index"/>
<KeyWord name="indexOf" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns a number that represents the position of a string within another string.
	Property of: String
	Usage: &lt;target expC&gt; .indexOf(&lt;search expC&gt;  [, &lt;from index expN&gt; ]) - 
	&lt;target expC&gt;  = The string in which you want to search for &lt;search expC&gt; .
	&lt;search expC&gt;  - The string you want to search for in &lt;target expC&gt; .
	[&lt;from index expN&gt; ] - Where you want to start searching for the string.
	By default, dBASE starts searching at the beginning of the string, index 0.">
	<Param name="&lt;search expC&gt; "/>
	<Param name="[&lt;from index expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="initiate" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Starts a conversation with an external application or aliased DDE server.
	Property of: DDELink
	Usage: &lt;oRef&gt; .initiate(&lt;server expC&gt; , &lt;topic expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the DDELink object through which you want
	to initiate the DDE link.
	&lt;server expC&gt;  - The executable filename of the server application 
	(normally the .EXE extension isn’t necessary) or the alias name of a running
	DDE server.
	&lt;topic expC&gt;  - Name of a built-in DDE topic, document, or other topic.">
	<Param name="&lt;server expC&gt; "/>
	<Param name="&lt;topic expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="inkey" func="yes">
	<Overload retVal="{nVal}" descr="Application Shell - 
		Gets the first keystroke waiting in the keyboard typeahead buffer.
	Can also be used to wait for a keystroke and return its value.">
		<Param name="[&lt;seconds expN&gt; ]"/>
		<Param name="[&lt;mouse expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="insert"/>
<KeyWord name="insert" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Inserts an element with the value false into a one-dimensional array,
	or inserts a row or column of elements with the value false into a
	two-dimensional array. Returns 1 if successful; generates an error if unsuccessful.
	The dimensions of the array do not change, so the element(s) at the end of
	the array will be lost.
	Property of: Array
	Usage: &lt;oRef&gt; .insert(&lt;position expN&gt;  [, &lt;row/column expN&gt; ]) - 
	&lt;oRef&gt;  = A reference to a one- or two-dimensional array
	in which you want to insert data.
	&lt;position expN&gt;  - When &lt;oRef&gt;  is a one-dimensional array,
	&lt;position expN&gt;  specifies the number of the element in which you want
	to insert a false value.
	When &lt;oRef&gt;  is a two-dimensional array, &lt;position expN&gt;  specifies the number
	of a row or column in which you want to insert false values. The second argument
	(discussed in the next paragraph) specifies whether &lt;position expN&gt; 
	is a row or a column.
	[&lt;row/column expN&gt; ] - Either 1 or 2. If you omit this argument or specify 1,
	a row is inserted into a two-dimensional array. If you specify 2,
	a column is inserted. dBASE generates an error if you use &lt;row/column expN&gt; 
	with a one-dimensional array.">
	<Param name="&lt;position expN&gt; "/>
	<Param name="[&lt;row/column expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="inspect" func="yes">
	<Overload retVal="{}" descr="IDE Language Elements - 
		Opens the Inspector, a window that lists object properties and lets you change their settings.">
		<Param name="&lt;object oRef&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="int" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the integer portion of a specified number">
		<Param name="&lt;nVar expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isAlias" func="yes">
	<Overload retVal="{lVal}" descr="Method - Method to determine if a database
	alias exists. Returns True if the alias exists, and false if it does not.
		Property of: Session
		Usage: &lt;oRef&gt; .isAlias(&lt;cAliasName&gt; ,&lt;nConfigMode&gt;  ) - 
		&lt;oRef&gt;  = An object reference to the form.
		&lt;cAliasName&gt;  - The alias name you want to check.
		&lt;nConfigMode&gt;  - optionally takes a second parameter specifying the configmode
		to use. defaults to checking with configmode of All (7) - See OLH for
		further options and information">
		<Param name="&lt;cAliasName&gt;"/>
		<Param name="&lt;nConfigMode&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="isalpha" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if the first character of a string is alphabetic.">
		<Param name="&lt;string expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isAlpha" func="yes">
	<Overload retVal="{lVal}" descr="Method - Returns true
	if the first character of a string is alphabetic.
	Property of: String
	Usage: &lt;expC&gt; .isAlpha() - &lt;expC&gt;  = The string you want to test.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="isblank" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Determines if a specified field or expression is blank.">
		<Param name="var exp"/>
	</Overload>
</KeyWord>
<KeyWord name="isInherited" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns true if the object reference passed in to it refers to an object
	that is part of a superclass, otherwise, the isInherited( ) method returns false.
	Property of: Designer
	Usage: &lt;oRef1&gt; .isInherited(&lt;oRef2&gt;  ) - 
	&lt;oRef1&gt;  = An object reference to a designer object.
	&lt;oRef2&gt;  - An object reference to an object contained within the Form,
	Report, or Datamodule currently loaded into the designer object (oRef1).">
	<Param name="&lt;oRef2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isKey" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns a logical value that indicates if the specified character
	expression is the key of an element in an associative array.
	Property of: AssocArray
	Usage: &lt;oRef&gt; .isKey(&lt;expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the associative array you want to search.
	&lt;expC&gt;  - The character string you want to find.">
	<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isLastPage" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns true or false to let you know if additional pages are due to be rendered.
	Property of: Report
	Usage: &lt;oRef&gt; .isLastPage() - 
	&lt;oRef&gt;  = An object reference to the report you want to check. See OLH.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="islower" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if the first character of a string is alphabetic and lowercase.">
		<Param name="&lt;string expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isLower" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns true if the first character of a string is alphabetic and lowercase.
	Property of: String
	Usage: &lt;oRef&gt; .isLower() - &lt;oRef&gt;  = The string you want to test.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="isRecordChanged" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns a logical value that indicates whether data in the current
	record buffer has been modified.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .isRecordChanged() - 
	&lt;oRef&gt;  = An object reference to the form.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="isRowLocked" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns a logical value indicating whether the current rowset
	has locked the current row.
	Property of: Rowset
	Usage: &lt;oRef&gt; .isRowLocked() - &lt;oRef&gt;  = An object reference to the rowset.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="isSetLocked" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns a logical value indicating whether the current rowset is locked.
	Property of: Rowset
	Usage: &lt;oRef&gt; .isSetLocked() - &lt;oRef&gt;  = An object reference to the rowset.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="istable" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Tests for the existence of a table in a specified database.">
		<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isupper" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if the first character of a string is alphabetic and uppercase.">
		<Param name="&lt;string expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="isUpper" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Returns true if the first character of a string is alphabetic and uppercase.
	Property of: String
	Usage: &lt;expC&gt; .isUpper() - &lt;expC&gt;  = The string you want to test.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="itoh" func="yes">
	<Overload retVal="{stringVal}" descr="Bitwise - 
		Returns the hexadecimal equivalent of a specified number, as a character string.">
		<Param name="&lt;int expN&gt; "/>
		<Param name="[&lt;chars expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="key" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the key expression of the specified index.">
		<Param name="[&lt;.mdx filename&gt;]"/>
		<Param name="[&lt;index position expN&gt; "/>
		<Param name="&lt;tag expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="keyboard" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Stuffs a character string into an edit control,
	simulating typed user input.
	Property of: Browse, ComboBox, Editor, Entryfield, SpinBox
	Usage: &lt;oRef&gt; .keyboard(&lt;keystroke expC&gt; ) - 
	&lt;oRef&gt;  = The control to receive the keystrokes.
	&lt;keystroke expC&gt;  - A string, which may include key codes.">
	<Param name="&lt;keystroke expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="keymatch" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified expression is found in an index. Using &lt;var exp&gt;  only">
		<Param name="&lt;var exp&gt; "/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified expression is found in an index. Using &lt;index position expN&gt; ">
		<Param name="&lt;var exp&gt; "/>
		<Param name="[&lt;index position expN&gt; ]"/>
		<Param name="&lt;tag expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified expression is found in an index. Using [&lt;.mdx filename expC&gt;] ">
		<Param name="&lt;var exp&gt; "/>
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="&lt;tag expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="last" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Moves the row cursor to the last row in the rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .last() - &lt;oRef&gt;  = The rowset in which you want to move the row cursor.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="lastIndexOf" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns a number that represents the starting position of a string
	within another string. lastIndexOf( ) searches backward from the right end
	of the target string, and returns a value counting from the beginning of the target.
	Property of: String
	Usage: &lt;target expC&gt; .lastIndexOf(&lt;search expC&gt;  [, &lt;from index expN&gt; ]) - 
	&lt;target expC&gt;  = The string in which you want to search for &lt;search expC&gt; .
	&lt;search expC&gt;  - The string you want to search for in &lt;target expC&gt; .
	[&lt;from index expN&gt; ] - Where you want to start searching for the string.
	By default, dBASE starts searching at the end of the string,
	index &lt;target expC&gt; .length – 1.">
	<Param name="&lt;search expC&gt; "/>
	<Param name="[&lt;from index expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="lastRow" func="yes">
	<Overload retVal="{bookmarkVal}" descr="Method - 
	Returns a bookmark for the row currently displayed in the last row of the grid.
	Property of: Grid
	Usage: &lt;oRef&gt; .lastRow() - &lt;oRef&gt;  = A reference to a grid object.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="ldriver" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
	Returns the name of the language driver the current table or a specified table is using.
	If no table is open and you issue LDRIVER( ) without an argument, it returns the global language driver in use.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="left" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a specified number of characters from the beginning of a character string.
	Property of: String
	Usage: &lt;expC&gt; .left(&lt;expN&gt; ) - 
	&lt;expC&gt;  = The string from which you want to extract characters.
	&lt;expN&gt;  - The number of characters to extract from the beginning of the string.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a specified number of characters from the beginning of a string.">
		<Param name="expC"/>
		<Param name="expN"/>
	</Overload>
</KeyWord>
<KeyWord name="leftTrim" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a string with no leading space characters.
		Property of: String
		Usage: &lt;expC&gt; .leftTrim() - 
		&lt;expC&gt;  = The string from which you want to remove the leading space characters.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="len" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns the number of characters in a specified character string.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="lennum" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns the display length (in characters) of a numeric expression.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="like" func="yes">
	<Overload retVal="{lVal}" descr="Strings - 
		Returns true if a specified string matches a specified skeleton string.">
		<Param name="&lt;skeleton expC&gt; "/>
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="lineno" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the current program line in the current program,
		procedure, or user-defined function (UDF).">
	</Overload>
</KeyWord>
<KeyWord name="list"/>
<KeyWord name="lksys" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns information about a locked record or file.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="load" func="yes">
	<Overload retVal="{null}" descr="Method - Attaches source data array to arrayRowset,
	Creates field objects for array columns and initializes arrayRowset internal properties.
		Property of: ArrayRowset
		Usage: &lt;oRef&gt; .load(&lt;oArray&gt;  [, &lt;oColumnInfo&gt; ]) - 
		&lt;oRef&gt;  = ArrayRowset to load to. Listed, not fully documented.
		&lt;oArray&gt;  - source data array. (guess)
		[&lt;oColumnInfo&gt; ] - source Column Info (guess)">
		<Param name="&lt;oArray&gt; "/>
		<Param name="[&lt;oColumnInfo&gt; ]"/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - listed, not documented
	Property of: ADOTableDef
	Usage: &lt;oRef&gt; .load() - &lt;oRef&gt;  = ADOTableDef">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="loadChildren" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Loads and instantiates TreeItems from a text file.
	Property of: TreeView
	Usage: &lt;oRef&gt; .loadChildren(&lt;filename expC&gt; ) - 
	&lt;oRef&gt;  = The TreeView object to contain the TreeItems.
	&lt;filename expC&gt;  - 
	The name of the text file containing the TreeItem objects and properties.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="loadFromFile" func="yes">
	<Overload retVal="{null}" descr="ADO Method - 
	Loads the contents of a file into a stream object.
	Property of: ADOStream
	Usage: &lt;oRef&gt; .loadFromFile(&lt;name expC&gt; ) - &lt;oRef&gt;  = The stream object.
	&lt;name expC&gt;  - The name of a file to be loaded into the stream object,
	can contain any valid path and name in UNC format.">
	<Param name="&lt;name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="local"/>
<KeyWord name="locate"/>
<KeyWord name="locateNext" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Applies the locate criteria again to search for another row.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .locateNext([&lt;rows expN&gt; ]) - 
	&lt;oRef&gt;  = The rowset in which to move the row cursor.
	[&lt;rows expN&gt; ] - The nth row to find. By default, the next row forward.">
	<Param name="[&lt;rows expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="lock" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Locks the current record or a specified list of records in a table.">
		<Param name=" [&lt;alias&gt; ]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Locks the current record or a specified list of records in a table.">
		<Param name="[&lt;record list expC&gt; "/>
		<Param name="&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="lockRow" func="yes">
	<Overload retVal="{lVal}" descr="Method - Attempts to lock the current row.
	Property of: Rowset
	Usage: &lt;oRef&gt; .lockRow() - &lt;oRef&gt;  = The rowset in which you want to lock the current row.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="lockSet" func="yes">
	<Overload retVal="{lVal}" descr="Method - Attempts to lock the entire rowset.
	Property of:Rowset
	Usage: &lt;oRef&gt; .lockSet() - &lt;oRef&gt;  = The rowset you want to lock.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="log" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the logarithm to the base e (natural logarithm) of a specified number.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="log10" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the logarithm to the base 10 of a specified number.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="login" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Logs in user to DBF table security for a session.
	Property of: Session
	Usage: &lt;oRef&gt; .login(&lt;group name expC&gt; , &lt;user name expC&gt; , &lt;password expC&gt; ) - 
	&lt;oRef&gt;  = The session to log into.
	&lt;group name expC&gt;  - The group name.
	&lt;user name expC&gt;  - The user name.
	&lt;password expC&gt;  - The password.">
	<Param name="&lt;group name expC&gt; "/>
	<Param name="&lt;user name expC&gt; "/>
	<Param name="&lt;password expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="logout"/>
<KeyWord name="lookup" func="yes">
	<Overload retVal="{val}" descr="Xbase - 
		Searches a field for a specified expression and, if the expression is found,
		returns the value of a field within the same record.">
		<Param name="&lt;return field&gt; "/>
		<Param name="&lt;exp&gt; "/>
		<Param name="&lt;lookup field&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="loop"/>
<KeyWord name="lower" func="yes">
	<Overload retVal="{stringVal}" descr="LocalSQL - 
		LOWER( ), to force a string to lowercase:">
		<Param name="&lt;expC&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Converts all uppercase characters in a string to lowercase
		and returns the resulting string.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="ltrim" func="yes">
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a string with no leading space characters.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="lupdate" func="yes">
	<Overload retVal="{dVal}" descr="Xbase - 
		Returns the date of the last change to a table.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="max" func="yes">
	<Overload retVal="{Greater value}" descr="LocalSQL - 
		Compares provided expression and returns the largest column value. 
		See OLH for LocalSQL usage and SQL documentation for full syntax">
		<Param name="&lt;column_name&gt; " />
	</Overload>
   <Overload retVal="{Greater value}" descr="Xbase - 
		Compares two numbers (or two date, character, or logical expressions) and returns the greater value.">
		<Param name="&lt;value exp1&gt; " />
		<Param name="&lt;value exp2&gt; " />
	</Overload>
</KeyWord>
<KeyWord name="md"/>
<KeyWord name="mdx" func="yes">
	<Overload retVal="{cVal}" descr="Xbase - 
		Returns the names of a DBF table’s open .MDX index files.">
		<Param name="[&lt;mdx expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="mdy" func="yes">
	<Overload retVal="{dVal}" descr="Date and Time -
		Returns a specified date as a character string in MONTH DD, YY format.">
		<Param name="&lt;expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="memlines" func="yes">
	<Overload retVal="{nVal}" descr="Xbase -
		Returns the number of lines in a memo field.">
		<Param name="&lt;memo field&gt; "/>
		<Param name="[&lt;line length expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="memory" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the amount of currently available memory.">
		<Param name="[&lt;expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="message" func="yes">
	<Overload retVal="{cVal}" descr="Miscellaneous Language Elements - 
		Returns the error message of the most recent dBASE error.">
	</Overload>
</KeyWord>
<KeyWord name="min" func="yes">
	<Overload retVal="{smallerValue}" descr="LocalSQL - 
		Compares provided expression and returns the smaller column value. 
		See OLH for LocalSQL usage and SQL documentation for full syntax">
		<Param name="&lt;column_name&gt; "/>
	</Overload>
	<Overload retVal="{val}" descr="Xbase - 
	Compares two numbers (or two date, character, or logical expressions) and returns the lesser value.">
		<Param name="&lt;exp1&gt; " />
		<Param name="&lt;exp2&gt; " />
	</Overload>
</KeyWord>
<KeyWord name="mkdir"/>
<KeyWord name="mline" func="yes">
	<Overload retVal="{cVal}" descr="Xbase - 
		Extracts a specified line of text from a memo field in the current record.">
		<Param name="&lt;memo field&gt; "/>
		<Param name="[&lt;line number expN &gt; "/>
		<Param name=" [&lt;line length expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="mod" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the modulus (remainder) of one number divided by another.">
		<Param name="&lt;dividend expN&gt; "/>
		<Param name="&lt;divisor expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="month" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the number of the month for a specified date.">
		<Param name="&lt;expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="move" func="yes">
	<Overload retVal="{null}" descr="Method - Repositions and resizes an object.
	Property of: Most form objects
	Usage: &lt;oRef&gt; .move(&lt;left expN&gt;  [, &lt;top expN&gt;  [, &lt;width expN&gt;  [, &lt;height expN&gt; ]]]) - 
	&lt;oRef&gt;  = The object to move or resize.
	&lt;left expN&gt;  - The new left property.
	[&lt;top expN&gt;  - The new top property.
	[&lt;width expN&gt;  - The new width property. To change the size of the image,
	you must specify both the &lt;left expN&gt;  and the &lt;top expN&gt; .
	[&lt;height expN&gt; ]]] - The new height property.">
	<Param name="&lt;left expN&gt; "/>
	<Param name="[&lt;top expN&gt; "/>
	<Param name="[&lt;width expN&gt; "/>
	<Param name="[&lt;height expN&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="MSGBOX" func="yes">
	<Overload retVal="{nVal}" descr="Application Shell - 
		Opens a dialog box that displays a message and pushbuttons,
		and returns a numeric value that corresponds to the pushbutton
		the user chooses.">
		<Param name="&lt;message expC&gt; " />
		<Param name="[&lt;title expC&gt; " />
		<Param name="[&lt;box type expN&gt; ]]" />
	</Overload>
</KeyWord>
<KeyWord name="ndx" func="yes">
	<Overload retVal="{cVal}" descr="Xbase - 
		Returns the names of a DBF table’s open .NDX files.">
		<Param name="[&lt;ndx expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="network" func="yes">
	<Overload retVal="{lVal}" descr="Miscellaneous Language Elements - 
		Returns true if dBASE is running on a system in which a 
		local area network (LAN) card or other multiuser system card
		has been installed.">
	</Overload>
</KeyWord>
<KeyWord name="next" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Moves the row cursor to another row relative to the current position.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .next([&lt;rows expN&gt; ]) - 
	&lt;oRef&gt;  = The rowset in which you want to move the row cursor.
	[&lt;rows expN&gt; ] - The number of rows you want to move. By default, the next row forward.">
	<Param name="[&lt;rows expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="nextKey" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns the key name of the element following the specified key
	in an associative array.
	Property of: AssocArray
	Usage: &lt;oRef&gt; .nextKey(&lt;key expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the associative array that contains the key.
	&lt;key expC&gt;  - An existing key name.">
	<Param name="&lt;key expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="notify" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Notifies all interested client applications that a dBASE item was changed.
	Property of: DDETopic
	Usage: &lt;oRef&gt; .notify(&lt;item expC&gt; ) - &lt;oRef&gt;  = &lt;object referred to&gt; 
	&lt;item expC&gt;  - ">
	<Param name="&lt;item expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="oem" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns a character string using the current global language driver
		that is the equivalent of an ANSI character expression.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="open" func="yes">
	<Overload retVal="{lVal}" descr="Method - Opens a form.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .open() - &lt;oRef&gt;  = The form to open.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{lVal}" descr="Method - Opens a specified file.
	Property of: File
	Usage: &lt;oRef&gt; .open(&lt;filename expC&gt; [, &lt;access expC&gt; ]) - 
	&lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to open.
	[&lt;access expC&gt; ] - The access level of the file being opened,
	as shown in the following table. See OLH for futher information.">
	<Param name="&lt;filename expC&gt; "/>
	<Param name="[&lt;access expC&gt; ]"/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Opens a database connection.
	Property of: Database
	Usage: This method is called implicitly by the Database object."> 
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - Opens a data object.
	Property of: ADOChapter, ADODatabase, ADODataShape, ADOPersist,
	ADOQuery, ADOStoredProc, ADOTable
	Usage: &lt;oRef&gt; .open() - &lt;oRef&gt;  = object to open."> 
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - Opens a stream object.
	Property of: ADOStream
	Usage: &lt;oRef&gt; .open([&lt;source expC&gt; ][,&lt;user expC&gt; ][,&lt;pass expC&gt; ]) - 
	&lt;oRef&gt;  = The stream object to be opened.
	[&lt;source expC&gt; ] - You can specify the source of data for stream object,
	may contain the path and name of the file ('C:\source.txt') See OLH for further information.
	[&lt;user expC&gt; ] - The user identification that, if it is needed, accesses the stream object.
	[&lt;pass expC&gt; ] - The password that, if it is needed, accesses the stream object.">
	<Param name="[&lt;source expC&gt; ]"/>
	<Param name="[&lt;user expC&gt; ]"/>
	<Param name="[&lt;pass expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="order" func="yes">
	<Overload retVal="{cVal}" descr="Xbase - 
		Returns the name of the current master index.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="originalValue" func="yes">
	<Overload retVal="{null}" descr="ADOField Method - Returns the original value of a field.
		Property of: ADOField
		Usage: &lt;oRef&gt; .originalValue() - &lt;oRef&gt;  = ADOField. Listed, not documented.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="os" func="yes">
	<Overload retVal="{stringVal}" descr="Files and Operating System - 
		Returns the name and version number of the current operating system.">
	</Overload>
</KeyWord>
<KeyWord name="otherwise"/>
<KeyWord name="pack"/>
<KeyWord name="packTable" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Packs a Standard table by removing all deleted rows.
	Property of: Database
	Usage: &lt;oRef&gt; .packTable(&lt;table name expC&gt; ) - 
	&lt;oRef&gt;  = The database in which the table exists.
	&lt;table name expC&gt;  - The name of the table you want to pack.">
	<Param name="&lt;table name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="pageCount" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns the highest numbered page used in a form.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .pageCount() - &lt;oRef&gt;  = An object reference to the form you want to check.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="parameter"/>
<KeyWord name="parameters"/>
<KeyWord name="params"/>
<KeyWord name="parse" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns time equivalent of a date/time string, in milliseconds.
	Property of: Date
	Usage: Date.parse(&lt;date expC&gt; ) - &lt;oRef&gt;  = Date object.
	&lt;date expC&gt;  - The date/time string you want to convert.">
	<Param name="&lt;date expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="paste" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Copies text from the Windows clipboard to the control.
	Property of: Browse, ComboBox, Editor, Entryfield, SpinBox
	Usage: &lt;oRef&gt; .paste() - 
	&lt;oRef&gt;  = An object reference to the control in which to paste the text.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="payment" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the periodic amount required to repay a debt.">
		<Param name="&lt;principal expN&gt; "/>
		<Param name="&lt;interest expN&gt; "/>
		<Param name="&lt;term expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="pcol" func="yes">
	<Overload retVal="{nVal}" descr="Text Streaming - 
		Returns the printing column position of a printer. Column numbers begin at 0.line">
	</Overload>
</KeyWord>
<KeyWord name="pcount" func="yes">
	<Overload retVal="{nVal}" descr="Core Language - 
		Returns the number of parameters passed to a routine.">
	</Overload>
</KeyWord>
<KeyWord name="peek" func="yes">
	<Overload retVal="{null}" descr="Method - Retrieves a data item from a DDE server.
	Property of: DDELink
	Usage: &lt;oRef&gt; .peek(&lt;item expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the DDELink object that has the link.
	&lt;item expC&gt;  - The name of the desired item.">
	<Param name="&lt;item expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="pi" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the approximate value of pi, the ratio of a circle’s
		circumference to its diameter.">
	</Overload>
</KeyWord>
<KeyWord name="poke" func="yes">
	<Overload retVal="{null}" descr="Method - Sends data to a DDE server.
	Property of: DDELink
	Usage: &lt;oRef&gt; .poke(&lt;item expC&gt; , &lt;value expC&gt; ) - 
	&lt;oRef&gt;  = reference to the DDELink object that has the link.
	&lt;item expC&gt;  - The name of the desired item.
	&lt;value expC&gt;  - The value you want to send (as a string).">
	<Param name="&lt;item expC&gt; "/>
	<Param name="&lt;value expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="pragma" />
<KeyWord name="prepare" func="yes">
	<Overload retVal="{null}" descr="Method - Prepares an SQL statement or stored procedure.
	Property of: Query, StoredProc
	Usage: &lt;oRef&gt; .prepare() - &lt;oRef&gt;  = The object you want to prepare.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="print" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Prints a form as it appears on screen, or prints only the data from a completed form
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .print([&lt;dialog expL&gt; [, &lt;mode expL&gt; ]]) - 
	&lt;oRef&gt;  = An object reference to the form you want to print. See OLH for more information.
	[&lt;dialog expL&gt;  - An optional parameter that determines whether to display
	the standard print dialog. If omitted, the dialog is displayed by default. 
	[&lt;mode expL&gt; ]] - An optional parameter that selects which method to use when printing.">
	<Param name="[&lt;dialog expL&gt; "/>
	<Param name="[&lt;mode expL&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="printjob"/>
<KeyWord name="printstatus" func="yes">
	<Overload retVal="{lVal}" descr="Text Streaming - 
		Returns true if the print device is ready to accept output.">
		<Param name="[&lt;port name expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="private"/>
<KeyWord name="procedure"/>
<KeyWord name="procrefcount" func="yes">
	<Overload retVal="{nVal}" descr="Core Language - 
		Returns the number of references to a procedure file.">
		<Param name="&lt;procedure file expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="program" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns the name of the currently executing program, procedure,
		or user-defined function (UDF).">
		<Param name="[&lt;expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="proper" func="yes">
	<Overload retVal="{stringVal}" descr="Strings - 
		Converts a character string to proper-noun format and 
		returns the resulting string.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="protect"/>
<KeyWord name="prow" func="yes">
	<Overload retVal="{nVal}" descr="Text Streaming - 
		Returns the printing row position of a printer. Row numbers begin at 0.">
	</Overload>
</KeyWord>
<KeyWord name="public"/>
<KeyWord name="putfile" func="yes">
	<Overload retVal="{filename}" descr="Files and Operating System - 
		Displays a dialog box within which the user can choose an exisiting file
		to overwrite or a new file name, and returns the file name. The function has
		several parameter options detailed below, but here is the main syntactic options.
		See OLH.
		Parameters with empty angle brackets (&lt;&gt; ) will need to have empty quotes if they're not being used.
		putfile() with no parameters brings up a general use file dialog box.">
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		putfile([&lt;title expC&gt;]) - Titles the Dialog Box">
		<Param name="&lt;title expC&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		putfile([ &lt; &gt;, &lt;filename expC&gt;]) - Filename to display in dialog box entryfield">
		<Param name="&lt;&gt;"/>
		<Param name="&lt;filename expC&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		putfile([ &lt;&gt;, &lt;&gt;, &lt;extension expC&gt;]) - Filename extension to save with, jpg,prg etc.">
		<Param name="&lt;&gt;"/>
		<Param name="&lt;&gt;"/>
		<Param name="&lt;extension expC&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		putfile([&lt;&gt;, &lt;&gt;, &lt;&gt;, &lt;suppress database expL&gt;]) - Database Selector true/false">
		<Param name="&lt;&gt;"/>
		<Param name="&lt;&gt;"/>
		<Param name="&lt;&gt;"/>
		<Param name="&lt;suppress database expL&gt;"/>
	</Overload>
	<Overload retVal="{filename}" descr="Files and Operating System - 
		putfile([&lt;&gt;, &lt;&gt;, &lt;&gt;, &lt;suppress database expL&gt;,
		[&lt;file types list expC&gt; | &lt;file group name expC&gt; (&lt;file types list expC&gt;)]])
		- File type group selection or custom type group with file extension list.">
		<Param name="&lt;&gt;"/>
		<Param name="&lt;&gt;"/>
		<Param name="&lt;&gt;"/>
		<Param name="&lt;suppress database expL&gt;"/>
		<Param name="&lt;file types list expC&gt; | &lt;file group name expC&gt; (&lt;file types list expC&gt;)"/>
	</Overload>
</KeyWord>
<KeyWord name="puts" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Writes a character string, and one or two end-of-line characters,
	to a file previously opened with create( ) or open( ).
	Returns the number of characters written. See OLH for more information.
	Property of: File
	Usage: &lt;oRef&gt; .puts(&lt;string expC&gt;  [, &lt;characters expN&gt;  [, &lt;end-of-line expC&gt; ]]) - 
	&lt;oRef&gt;  = A reference to the File object that created or opened the file.
	&lt;string expC&gt;  - The character expression to write to the specified file.
	If you want to write only a portion of &lt;string expC&gt;  to the file,
	use the &lt;characters expN&gt;  argument.
	[&lt;characters expN&gt;  - The number of characters of the specified character expression
	&lt;string expC&gt;  to write to the specified file, starting at the first character in
	&lt;string expC&gt; . If omitted, the entire string is written.
	[&lt;end-of-line expC&gt; ]] - The end-of-line indicator, which can be a string of one or
	two characters. If omitted, the default is a hard carriage return and line feed.">
	<Param name="&lt;string expC&gt; "/>
	<Param name="[&lt;characters expN&gt; "/>
	<Param name="[&lt;end-of-line expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="pv" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the present value of an investment.">
		<Param name="&lt;payment expN&gt; "/>
		<Param name="&lt;interest expN&gt; "/>
		<Param name="&lt;term expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="quit"/>
<KeyWord name="random" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns a pseudo-random number between 0 and 1 exclusive (never 0 and
		never 1). Same as RAND( )">
		<Param name="[&lt;expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="rat" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns a number that represents the starting position of a string
		within another string. RAT( ) searches backward from the right end
		of the target string, and returns a value counting from the beginning
		of the target.">
		<Param name="&lt;search expC&gt; "/>
		<Param name="&lt;target expC&gt; "/>
		<Param name="[&lt;nth occurrence expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="read" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a specified number of characters from a file previously
	opened with create( ) or open( ).
	Property of: File
	Usage: &lt;oRef&gt; .read(&lt;characters expN&gt; ) - 
	&lt;oRef&gt;  = A reference to the File object that created or opened the file.
	&lt;characters expN&gt; ">
	<Param name="&lt;characters expN&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - Reads character or binary data from a stream object.
		Listed, not well documented.
		Property of: ADOStream
		Usage: &lt;oRef&gt;.read([&lt;num expN&gt;]) - &lt;oRef&gt; = The stream object.
		[&lt;num expN&gt;] - The number of characters or bytes; may contain the negative constant :
		-1  (Reads all characters or bytes from the stream, from the current position to EOS) (Default)
		-2  (Reads the next line, seperated by lineSeparator type, from the text streams)">
		<Param name="[&lt;num expN&gt;]"/>
	</Overload>
</KeyWord>
<KeyWord name="readln" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a line of text from a file previously opened with create( ) or open( ).
	Property of: File
	Usage: &lt;oRef&gt; .readln([&lt;characters expN&gt;  [, &lt;end-of-line expC&gt; ]]) - 
	&lt;oRef&gt;  = File object being read from.
	[&lt;characters expN&gt;  - The number of characters to read and return 
	before a carriage return is reached.
	[&lt;end-of-line expC&gt; ]] - The end-of-line indicator, which can be a string of one
	or two characters. If omitted, the default is a hard carriage return and line feed.
	See OLH and gets() for further information.">
	<Param name="[&lt;characters expN&gt;  "/>
	<Param name="[&lt;end-of-line expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="readModal" func="yes">
	<Overload retVal="{val}" descr="Method - 
	Opens a form as a modal window and returns an optional value.
	Property of: Form
	Usage: &lt;oRef&gt; .readModal() - &lt;oRef&gt;  = The form to open.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="recall"/>
<KeyWord name="reccount" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of records in a table.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="recno" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		For DBF tables, returns the current record number. For all other table types,
		returns a bookmark of the current position in a table.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="reconnect" func="yes">
	<Overload retVal="{lVal}" descr="Method - Attempts to restart a terminated
	conversation with a DDE server application.
	Property of: DDELink
	Usage: &lt;oRef&gt; .reconnect() - &lt;oRef&gt;  = A reference to the DDELink object that had the link.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="recsize" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of bytes in a record of a table.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="redefine"/>
<KeyWord name="reExecute" func="yes">
	<Overload retVal="{null}" descr="Method - Re-executes the report.
	Property of: ReportViewer
	Usage: &lt;oRef&gt; .reExecute() - 
	&lt;oRef&gt;  = The ReportViewer object that contains the report to re-execute.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="refcount" func="yes">
	<Overload retVal="{nVal}" descr="Core Language - 
		Returns the number of references to an object.">
		<Param name="&lt;oRef&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="refresh"/>
<KeyWord name="refresh" func="yes">
	<Overload retVal="{null}" descr="Method - Refreshes data in the entire rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .refresh() - &lt;oRef&gt;  = The rowset you want to refresh.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="Method - Redraws the form or grid.
	Property of: Form, Grid, SubForm
	Usage: &lt;oRef&gt; .refresh() - &lt;oRef&gt;  = The object to refresh">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - Listed, not documented.
	Property of: ADOErrorArray, ADOParameterArray, ADORowset
	Usage: &lt;oRef&gt; .refresh() - &lt;oRef&gt;  = The object to refresh">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="refreshControls" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Refreshes any controls that are dataLinked to the current row.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .refreshControls() - &lt;oRef&gt;  = The rowset you want to refresh.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="refreshRow" func="yes">
	<Overload retVal="{null}" descr="Method - Refreshes data in the current row.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .refreshRow() - &lt;oRef&gt;  = The rowset you want to refresh.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="reindex"/>
<KeyWord name="reindex" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Rebuilds a Standard table’s indexes from scratch.
	Property of: Database
	Usage: &lt;oRef&gt; .reindex(&lt;table name expC&gt; ) - 
	&lt;oRef&gt;  = The database in which the table exists.
	&lt;table name expC&gt;  - The name of the table you want to reindex.">
	<Param name="&lt;table name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="relation" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the link expression defined with the SET RELATION command.">
		<Param name="&lt;expN&gt; "/>
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="release"/>
<KeyWord name="release" func="yes">
	<Overload retVal="{lVal}" descr="Method - Explicitly releases an object from memory.
	Property of: All form objects; all report objects except Band and StreamFrame.
	Usage: &lt;oRef&gt; .release() - &lt;oRef&gt;  = An object reference to the object you want to release.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="releaseAllChildren" func="yes">
	<Overload retVal="{lVal}" descr="Method - Deletes all tree items in the tree.
	Property of: TreeView
	Usage: &lt;oRef&gt; .releaseAllChildren() - &lt;oRef&gt;  = The TreeView object you want to clear.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="removeAll" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Deletes all elements from an associative array.
	Property of: AssocArray
	Usage: &lt;oRef&gt; .removeAll() - 
	&lt;oRef&gt;  = A reference to the associative array you want to empty.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="removeKey" func="yes">
	<Overload retVal="{null}" descr="Method - Deletes an element from an associative array.
	Property of: AssocArray
	Usage: &lt;oRef&gt; .removeKey(&lt;key expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the associative array that contains the key.
	&lt;key expC&gt;  - The key value of the element you want to delete.">
	<Param name="&lt;key expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="rename"/>
<KeyWord name="rename" func="yes">
	<Overload retVal="{null}" descr="Method - Renames a file on disk.
	Property of: File
	Usage:&lt;oRef&gt; .rename(&lt;filename expC&gt; , &lt;new name expC&gt; ) - 
	&lt;oRef&gt;  = A reference to a File object. See OLH for further information.
	&lt;filename expC&gt;  - Identifies the file to rename (also known as the source file). 
	&lt;new name expC&gt;  - Identifies the new name for the source file (also known as the target file). ">
	<Param name="&lt;filename expC&gt; "/>
	<Param name="&lt;new name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="renameTable" func="yes">
	<Overload retVal="{null}" descr="Method - Renames a table in a database.
	Property of: Database
	Usage: &lt;oRef&gt; .renameTable(&lt;old name expC&gt; , &lt;new name expC&gt; ) - 
	&lt;oRef&gt;  = The database in which to rename the table.
	&lt;old name expC&gt;  - The current name of the table.
	&lt;new name expC&gt;  - The new name of the table.">
	<Param name="&lt;old name expC&gt; "/>
	<Param name="&lt;new name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="render" func="yes">
	<Overload retVal="{null}" descr="Method - Renders the reports to the designated target.
	Property of: Report
	Usage: &lt;oRef&gt; .render() - &lt;oRef&gt;  = An object reference to the report you want to render.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="replace"/>
<KeyWord name="replaceFromFile" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Copies the contents of a file into a BLOB field.
	Property of: Field
	Usage: &lt;oRef&gt; .replaceFromFile(&lt;file name expC&gt;  [,&lt;append expL&gt; ]) - 
	&lt;oRef&gt;  = The BLOB field you want to copy into.
	&lt;file name expC&gt;  - The name of the file you want to copy.
	[&lt;append expL&gt; ] - Whether to append the new data or overwrite.">
	<Param name="&lt;file name expC&gt; "/>
	<Param name="[&lt;append expL&gt; ]"/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - 
	Copies data from external file to BLOB field. Listed, semi-documented.
	Property of: ADOField
	Usage: &lt;oRef&gt; .replaceFromFile(&lt;file name expC&gt;  [,&lt;append expL&gt; ]) - 
	&lt;oRef&gt;  = The BLOB field you want to copy into.
	&lt;file name expC&gt;  - The name of the file you want to copy.
	[&lt;append expL&gt; ] - Whether to append the new data or overwrite.">
	<Param name="&lt;file name expC&gt; "/>
	<Param name="[&lt;append expL&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="replaceFromStream" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Copies data from stream object to BLOB field.
		Property of: ADOField
		Usage: &lt;oRef&gt; .replaceFromStream(&lt;stream expO&gt; ) - 
		&lt;oRef&gt;  = BLOB Field to copy into.
		&lt;stream expO&gt;  - Stream Object to copy into BLOB Field.">
		<Param name="&lt;stream expO&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="replicate" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a string repeated a specified number of times.
	Property of: String
	Usage: &lt;oRef&gt; .replicate(&lt;expC&gt;  [, &lt;expN&gt; ]) - 
	&lt;oRef&gt;  = A reference to a String object.
	&lt;expC&gt;  - The string you want to repeat.
	[&lt;expN&gt; ] - The number of times to repeat the string; by default, 1.">
	<Param name="&lt;expC&gt; "/>
	<Param name="[&lt;expN&gt; ]"/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a string repeated a specified number of times.">
		<Param name="&lt;expC&gt; "/>
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="requery" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Re-executes the query or stored procedure, regenerating the rowset.
	Property of: Query, StoredProc
	Usage: &lt;oRef&gt; .requery() - &lt;oRef&gt;  = The query or stored procedure you want to re-execute.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="resize" func="yes">
	<Overload retVal="{nVal}" descr="Method - Sets the size of an array
	to the specified dimensions and returns a numeric value representing
	the number of elements in the modified array.
	Property of: Array
	Usage: &lt;oRef&gt; .resize(&lt;rows expN&gt;  [,&lt;cols expN&gt;  [, &lt;retain values expN&gt; ]]) - 
	&lt;oRef&gt;  = A reference to the array whose size you want to change.
	&lt;rows expN&gt;  - The number of rows the resized array should have.
	&lt;rows expN&gt;  must always be a positive, nonzero value.
	[&lt;cols expN&gt;  - The number of columns the resized array should have.
	&lt;cols expN&gt;  must always be 0 or a positive value. If you omit this option,
	resize( ) changes the number of rows in the array and leaves the number of
	columns the same.
	[&lt;retain values expN&gt; ]] - Determines what happens to the values of the array
	when rows are added or removed. If it is nonzero, values are retained.
	If you want to specify a value for &lt;retain values expN&gt; , you must also specify
	a value for &lt;new cols expN&gt; .">
	<Param name="&lt;rows expN&gt; "/>
	<Param name="[&lt;cols expN&gt; "/>
	<Param name="[&lt;retain values expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="resource" func="yes">
	<Overload retVal="{stringVal}" descr="Extending dBASE Plus - 
		Returns a character string from a DLL file.">
		<Param name="&lt;resource id&gt; "/>
		<Param name="&lt;DLL filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="restore"/>
<KeyWord name="restructure" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Listed, not documented
		Property of: ADOTableDef
		Usage: &lt;oRef&gt; .restructure() - &lt;oRef&gt;  = ADOTableDef object">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="resume"/>
<KeyWord name="retry"/>
<KeyWord name="return"/>
<KeyWord name="right" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns characters from the end of a character string.
	Property of: String
	Usage: &lt;expC&gt; .right(&lt;expN&gt; ) - 
	&lt;expC&gt;  = The string from which you want to extract characters.
	&lt;expN&gt;  - The number of characters to extract from the string.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns characters from the end of a character string.">
		<Param name="&lt;expC&gt; "/>
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="rightTrim" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a string with no trailing space characters.
		Property of: String
		Usage: &lt;expC&gt; .rightTrim( ) - 
		&lt;expC&gt;  = The string from which you want to remove the trailing space characters.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="rlock" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Locks the current record or a specified list of records
		in the current or specified table.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Locks the current record or a specified list of records
		in the current or specified table.">
		<Param name="[&lt;list expC&gt; "/>
		<Param name="&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="rmdir"/>
<KeyWord name="rollback" func="yes">
	<Overload retVal="{null}" descr="Method - 
		Cancels the transaction by undoing all logged changes.
		Property of: Database
		Usage: &lt;oRef&gt; .rollback() - 
		&lt;oRef&gt;  = The database whose changes you want to rollback.">
		<Param name=""/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Cancels the transaction by undoing all logged changes.">
		<Param name="[&lt;database name expC&gt; ]"/>
	</Overload>
		<Overload retVal="{null}" descr="ADO Method - 
		Cancels the transaction by undoing all logged changes.
		Property of: ADODatabase
		Usage: &lt;oRef&gt; .rollback() - 
		&lt;oRef&gt;  = The database whose changes you want to rollback.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="round" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns a specified number rounded to the nearest integer
		or a specified number of decimal places.">
		<Param name="&lt;expN 1&gt; "/>
		<Param name="&lt;expN 2&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="rowCount" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the logical row count.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .rowCount() - &lt;oRef&gt;  = The rowset you want to count.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="rowNo" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns the current logical row number in the rowset.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .rowNo() - &lt;oRef&gt;  = The rowset containing the current row.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="rtod" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the degree value of an angle measured in radians.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="rtrim" func="yes">
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a string with no trailing space characters.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="run" func="yes">
	<Overload retVal="{lVal}" descr="Files and Operating System - 
		Executes a program or operating system command from within dBASE,
		returning the instance handle of the program.">
		<Param name="[&lt;direct expL&gt; ]"/>
		<Param name="&lt;command expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="save"/>
<KeyWord name="save" func="yes">
	<Overload retVal="{null}" descr="Method - Saves the current row buffer.
	Property of: Rowset, ArrayRowset
	Usage: &lt;oRef&gt; .save() - &lt;oRef&gt;  = The rowset you want to save.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - 
	Saves current row. Method is listed, but not documented, in OLH.
	Property of: ADORowset
	Usage: &lt;oRef&gt; .save() - &lt;oRef&gt;  = &lt;object referred to&gt; ">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="saveRecord" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Saves changes to the current record in the currently active table.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .saveRecord() - &lt;oRef&gt;  = An object reference to the form.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="saveToFile" func="yes">
	<Overload retVal="{null}" descr="ADO Method - 
	Saves the contents of a rowset to a file. See OLH. Listed, not documented.
		Property of: ADORowset
		Usage: &lt;oRef&gt; .saveToFile(&lt;file expC&gt; [,&lt;format expC&gt; ]) - 
		&lt;oRef&gt;  = An object reference to the ADORowset.
		&lt;file expC&gt;  - filename to save to.
		[&lt;format expC&gt; ] - Listed, not documented. See saveToStream for guidance">
		<Param name="&lt;file expC&gt; "/>
		<Param name="[&lt;format expC&gt; ]"/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - 
		Saves the binary contents of a stream object to a file. Listed, not documented.
		Property of: ADOStream
		Usage: &lt;oRef&gt; .saveToFile(&lt;name expC&gt; ) - 
		&lt;oRef&gt;  = An object reference to the Stream.
		&lt;name expC&gt;  - filename to save to.">
		<Param name="&lt;name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="saveToStream" func="yes">
	<Overload retVal="{null}" descr="ADO Method - 
		Saves the contents of a rowset to stream object. See OLH for information.
		Property of: ADORowset
		Usage: &lt;oRef&gt; .saveToStream(&lt;stream expO&gt; [,&lt;format expC&gt; ]) - 
		&lt;oRef&gt;  = The rowset you want to save.
		&lt;stream expO&gt;  - The pointer to stream 
		[&lt;format expC&gt; ] - The name of the format in which the rowset is to be saved.">
		<Param name="&lt;stream expO&gt; "/>
		<Param name="[&lt;format expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="scan"/>
<KeyWord name="scan" func="yes">
	<Overload retVal="{nVal}" descr="Method - Searches an array for an expression.
	Returns the number of the first element that matches the expression if the search
	is successful, or 0 if the search is unsuccessful.
	Property of: Array
	Usage: &lt;oRef&gt; .scan(&lt;exp&gt;  [, &lt;starting element expN&gt;  [, &lt;elements expN&gt; ]]) - 
	&lt;oRef&gt;  = A reference to the array you want to search.
	&lt;exp&gt;  - The expression you want to search for in &lt;oRef&gt; .
	[&lt;starting element expN&gt;  - The element number in &lt;oRef&gt;  at which you want to start
	searching. Without &lt;starting element expN&gt; , scan( ) starts searching at the first
	element.
	[&lt;elements expN&gt; ]] - The number of elements in &lt;oRef&gt;  that scan( ) searches.
	Without &lt;elements expN&gt; , scan( ) searches &lt;oRef&gt;  from &lt;starting element expN&gt; 
	to the end of the array. If you want to specify a value for &lt;elements expN&gt; ,
	you must also specify a value for &lt;starting element expN&gt; .">
	<Param name="&lt;exp&gt; "/>
	<Param name="[&lt;starting element expN&gt; "/>
	<Param name="[&lt;elements expN&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="schema" func="yes">
	<Overload retVal="{null}" descr="ADO Method - 
		Returns an ADORowset object containing metadata for the rowset.
		Property of: ADORowset
		Usage: &lt;oRef&gt; .schema() - &lt;oRef&gt;  = An object reference to the ADORowset.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="scroll" func="yes">
	<Overload retVal="{null}" descr="Method - Gives the appearance of scrolling the
	client area, of a form or subform, by moving the form's border window over the
	form's client area.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .scroll(&lt;horizontal expN&gt; ,&lt;vertical expN&gt;  ) - 
	&lt;oRef&gt;  = An object reference to the Form or SubForm.
	&lt;horizontal expN&gt;  - Horizontal position of top left corner of the form’s client area.
	&lt;vertical expN&gt;  - Vertical position of top left corner of the form’s client area.">
	<Param name="&lt;horizontal expN&gt; "/>
	<Param name="&lt;vertical expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="seconds" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the number of seconds that have elapsed on your computer's
		system clock since midnight.">
	</Overload>
</KeyWord>
<KeyWord name="seek" func="yes">
	<Overload retVal="{newPosition}" descr="Method - 
		Moves the file pointer in a file previously opened with create( ) or open( ), 
		and returns the new position of the file pointer.
		Property of: FILE
		Usage: &lt;oRef&gt;.seek(&lt;offset expN&gt; [, &lt;position expN&gt;]) - 
		&lt;oRef&gt; = A reference to the File object that created or opened the file.">
		<Param name="&lt;offset expN&gt;"/>
		<Param name="[&lt;position expN&gt;]"/>
	</Overload>
	<Overload retVal="{lVal}" descr="Xbase - 
		Searches for the first record in an indexed table whose key matches the specified expression
		See OLH for SEEK() usage.">
		<Param name="&lt;exp&gt;"/>
		<Param name="[&lt;alias&gt;]"/>
	</Overload>
		<Overload retVal="{}" descr="Xbase - 
		Searches for the first record in an indexed table whose key fields matches the specified expression or expression list.
		See OLH for SEEK usage">
		<Param name="&lt;exp&gt; | &lt;exp list&gt;"/>
	</Overload>
</KeyWord>
<KeyWord name="select" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Makes the tree item the selected item in the tree.
		Property of: TreeItem
		Usage: &lt;oRef&gt; .select() - &lt;oRef&gt;  = 
		An object reference to the tree item you want to select.">
		<Param name=""/>
	</Overload>
	<Overload retVal="{data}" descr="LocalSQL - 
		Retrieves data from one or more tables.
		See OLH for SELECT usage.">
		<Param name="[DISTINCT] &lt;column list&gt; "/>
	</Overload>
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of an available work area or the work area number associated with a specified alias.">
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
	<Overload retVal="{}" descr="Xbase - Command -
	Sets the current work area in which to open or perform operations on a table.">
		<Param name="&lt;alias&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="selected" func="yes">
	<Overload retVal="{itemVal}" descr="Method - Returns the currently selected item(s)
	in an object, or checks if a specified item is selected.
	Property of: Grid, ListBox
	Usage: &lt;oRef&gt; .selected([&lt;item expN&gt; ]) - 
	&lt;oRef&gt;  = A reference to the object you want to check.
	[&lt;item expN&gt; ] - The item number to check. If omitted, the currently selected item(s)
	are returned. This parameter is allowed only for the ListBox control;
	the Grid method takes no parameters.">
	<Param name="[&lt;item expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="set" func="yes">
	<Overload retVal="{stringVal}" descr="Core Language - 
		Returns the current setting of a SET command or function key.">
		<Param name="&lt;expC&gt; "/>
		<Param name="[&lt;expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="setAsFirstVisible" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Makes the tree item visible as the first (topmost) in the tree view.
	Property of: TreeItem
	Usage: &lt;oRef&gt; .setAsFirstVisible() - &lt;oRef&gt;  = 
	An object reference to the tree item you want to display.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="setByte" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Assigns a new value to the byte at the specified index in the string.
	Property of: String
	Usage: &lt;oRef&gt; .setByte(&lt;index expN&gt; , &lt;value expN&gt; ) - 
	&lt;oRef&gt;  = A reference to the String object that you’re using as a structure.
	&lt;index expN&gt;  - The index number of the byte to set. The first byte is at index number zero.
	&lt;value expN&gt;  - The new byte value, from 0 to 255.">
	<Param name="&lt;index expN&gt; "/>
	<Param name="&lt;value expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setDate" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets day of month.
	Property of: Date
	Usage: &lt;oRef&gt; .setDate(&lt;expN&gt; ) - &lt;oRef&gt;  = The Date object whose day you want to change.
	&lt;expN&gt;  - The day of month number, normally between 1 and 31.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setFocus" func="yes">
	<Overload retVal="{null}" descr="Method - Sets focus to a component.
	Property of: Form and all form components that get focus
	Usage: &lt;oRef&gt; .setFocus() - &lt;oRef&gt;  = A reference to the object to receive focus.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="setHours" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets hours portion of time.
	Property of: Date
	Usage: &lt;oRef&gt; .setHours(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Date object whose hours you want to change.
	&lt;expN&gt;  - The hour number, normally between 0 and 23.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setMinutes" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets minutes portion of time.
	Property of: Date
	Usage: &lt;oRef&gt; .setMinutes(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Date object whose minutes you want to change.
	&lt;expN&gt;  - The minute number, normally between 0 and 59.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setMonth" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets month of year.
	Property of: Date
	Usage: &lt;oRef&gt; .setMonth(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Date object whose month you want to change.
	&lt;expN&gt;  - The month number, normally between 0 and 11: 0 for January,
	1 for February, and so on, up to 11 for December.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setPermissions" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Listed, not documented.
		Property of: ADOUser
		Usage: &lt;oRef&gt; .setPermissions() - &lt;oRef&gt;  = An object reference to the ADOUser.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="setRange" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Constrains the rowset to those rows whose key field values falls within a range.
	Property of: Rowset
	Usage: &lt;oRef&gt; .setRange(&lt;key exp&gt; ) - &lt;oRef&gt;  = The rowset you want to constrain.
	&lt;key exp&gt;  - Shows only those rows whose key value matches &lt;key exp&gt; .">
	<Param name="&lt;key exp&gt; "/>
	</Overload>
	<Overload retVal="{null}" descr="Method - 
	Constrains the rowset to those rows whose key field values falls within a range.
	Property of: Rowset
	Usage: &lt;oRef&gt; .setRange(&lt;startKey exp&gt;  | null, &lt;endKey exp&gt;  | null ) - 
	&lt;oRef&gt;  = The rowset you want to constrain. See OLH for usage information of this use.
	&lt;startKey exp&gt;  - Shows those rows whose key value is equal to or greater than &lt;startKey exp&gt; .
	&lt;endKey exp&gt;  - Shows those rows whose key value is less than or equal to &lt;endKey exp&gt; .">
	<Param name="&lt;startKey exp&gt; "/>
	<Param name="&lt;endKey exp&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setSeconds" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets seconds portion of time.
	Property of: Date
	Usage: &lt;oRef&gt; .setSeconds(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Date object whose seconds you want to change.
	&lt;expN&gt;  - The number of seconds, normally between 0 and 59.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setTic" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Manually sets a tic mark in a Slider object.
	Property of: Slider
	Usage: &lt;oRef&gt; .setTic(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Slider object whose tic mark to set.
	&lt;expN&gt;  - The location of the tic mark.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setTicFrequency" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Sets the tic mark interval for automatic tic marks in a Slider object.
	Property of: Slider
	Usage: &lt;oRef&gt; .setTicFrequency(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Slider object whose tic mark to set.
	&lt;expN&gt;  - The frequency of the tic marks.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setTime" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets date/time of Date object.
	Property of: Date
	Usage: &lt;oRef&gt; .setTime(&lt;expN&gt; ) - &lt;oRef&gt;  = The Date object whose time you want to set.
	&lt;expN&gt;  - The number of milliseconds since January 1, 1970 00:00:00 GMT for the
	desired date/time.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="setto" func="yes">
	<Overload retVal="{stringVal}" descr="Core Language - 
		Returns the current setting of a SET...TO command or function key.">
		<Param name="&lt;expC&gt; "/>
		<Param name="[&lt;expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="setYear" func="yes">
	<Overload retVal="{dVal}" descr="Method - Sets year of date.
	Property of: Date
	Usage: &lt;oRef&gt; .setYear(&lt;expN&gt; ) - 
	&lt;oRef&gt;  = The Date object whose year you want to change.
	&lt;expN&gt;  - The year. For years in the range 1950 to 2049, you can specify the year
	as either a 2-digit or 4-digit year.">
	<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="shortName" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns the short (8.3) name of a file.
	Property of: File
	Usage: &lt;oRef&gt; .shortName(&lt;filename expC&gt; ) - 
	&lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to check.
	See OLH for further information.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="showFormatBar" func="yes">
	<Overload retVal="{null}" descr="Method - Displays or hides the Format toolbar.
	Property of: Form, SubForm
	Usage: &lt;oRef&gt; .showFormatBar(&lt;expL&gt; ) - &lt;oRef&gt;  = A Form object.
	&lt;expL&gt;  - true to show the toolbar, false to hide the toolbar.">
	<Param name="&lt;expL&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="showMemoEditor" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Displays or hides the memo editor control for an entryfield.
	Property of: Entryfield
	Usage: &lt;oRef&gt; .showMemoEditor(&lt;expL&gt; ) - &lt;oRef&gt;  = 
	The Entryfield that’s dataLinked to the memo field.
	&lt;expL&gt;  - true to show the editor, false to hide the editor.">
	<Param name="&lt;expL&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="sign" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns an integer that indicates if a specified number is positive,
		negative, or zero (0).">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="sin" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the trigonometric sine of an angle.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="size" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the size of a file in bytes.
	Property of: File
	Usage: &lt;oRef&gt; .size(&lt;filename expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to check. See OLH for more information.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="skip"/>
<KeyWord name="skipLine" func="yes">
	<Overload retVal="{null}" descr="ADO Method - 
	Skips a line when reading a text stream. Listed,
	not well documented.
		Property of: ADOStream
		Usage: &lt;oRef&gt; .skipLine() - &lt;oRef&gt;  = The stream object.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="sort"/>
<KeyWord name="sort" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Sorts the elements in a one-dimensional array or the rows in a two-dimensional array.
	Returns 1 if successful; generates an error if unsuccessful. See OLH for futher information on usage.
	Property of: Array
	Usage: &lt;oRef&gt; .sort([&lt;starting element expN&gt;  [,&lt;elements to sort expN&gt;  [, &lt;sort order expN&gt; ]]]) - 
	&lt;oRef&gt;  = A reference to the array you want to sort.
	[&lt;starting element expN&gt;  - In a one-dimensional array, the number of the element in &lt;oRef&gt; 
	at which you want to start sorting. In a two-dimensional array, the number (subscript)
	of the column on which you want to sort. 
	[&lt;elements to sort expN&gt;  - In a one-dimensional array, the number of elements you want to sort.
	In a two-dimensional array, the number of rows to sort.
	[&lt;sort order expN&gt; ]]] - The sort order:
	0 specifies ascending order (the default)
	1 specifies descending order">
	<Param name="[&lt;starting element expN&gt; "/>
	<Param name="[&lt;elements to sort expN&gt; "/>
	<Param name="[&lt;sort order expN&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="sortChildren" func="yes">
	<Overload retVal="{null}" descr="Method - Sorts child tree items.
	Property of: TreeItem, TreeView
	Usage: &lt;oRef&gt; .sortChildren() - &lt;oRef&gt;  = The tree object whose children to sort.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="soundex" func="yes">
	<Overload retVal="{cVal}" descr="Strings - 
		Returns a four-character string that represents the SOUNDEX
		(sound-alike) code of another string.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="space" func="yes">
	<Overload retVal="{stringVal}" descr="Method - Returns a specified number of space characters.
	Property of: String
	Usage: &lt;oRef&gt; .space(&lt;expN&gt; ) - &lt;oRef&gt;  = A reference to a String object.
	&lt;expN&gt;  - ">
	<Param name="&lt;expN&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a specified number of space characters.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="sqlerror" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Returns the number of the last server error.">
	</Overload>
</KeyWord>
<KeyWord name="sqlexec" func="yes">
	<Overload retVal="{nVal}" descr="Miscellaneous Language Elements - 
		Executes an SQL statement in the current database
		or on specified dBASE or Paradox tables.">
		<Param name="&lt;SQL statement expC&gt; "/>
		<Param name="[&lt;Answer table expC&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="sqlmessage" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns the most recent server error message.">
	</Overload>
</KeyWord>
<KeyWord name="sqrt" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the square root of a number.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="static"/>
<KeyWord name="store"/>
<KeyWord name="str" func="yes">
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns the character string equivalent of a specified numeric expression.">
		<Param name="&lt;expN&gt; "/>
		<Param name="[&lt;length expN&gt; "/>
		<Param name="[&lt;decimals expN&gt; "/>
		<Param name="[&lt;expC&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="streamChildren" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Saves child TreeItem objects and properties to a text file.
	Property of: TreeView
	Usage: &lt;oRef&gt; .streamChildren(&lt;filename expC&gt; ) - 
	&lt;oRef&gt;  = The TreeView parent object of the child TreeItems.
	&lt;filename expC&gt;  - The name of the file to contain the child
	TreeItem objects and properties.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="stuff" func="yes">
	<Overload retVal="{stringVal}" descr="Method - Returns a string with specified
	characters removed and others inserted in their place.
	Property of: String
	Usage: &lt;expC&gt; .stuff(&lt;start expN&gt; , &lt;quantity expN&gt;  [, &lt;replacement expC&gt; ]) - 
	&lt;expC&gt;  = The string in which you want to remove and replace characters.
	&lt;start expN&gt;  - The character position in the string at which you want to start removing characters.
	&lt;quantity expN&gt;  - The number of characters you want to remove from the string.
	[&lt;replacement expC&gt; ] - The characters you want to insert in the string.
	By default, this is an empty string.">
	<Param name="&lt;start expN&gt; "/>
	<Param name="&lt;quantity expN&gt; "/>
	<Param name="[&lt;replacement expC&gt; ]"/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a string with specified characters removed
		and others inserted in their place.">
		<Param name="&lt;target expC&gt; "/>
		<Param name="&lt;start expN&gt; "/>
		<Param name="&lt;quantity expN&gt; "/>
		<Param name="&lt;replacement expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="subscript" func="yes">
	<Overload retVal="{nVal}" descr="Method - Returns the row number or
	the column number of a specified element in an array.
	Property of: Array
	Usage: &lt;oRef&gt; .subscript(&lt;element expN&gt; , &lt;row/column expN&gt; ) - 
	&lt;oRef&gt;  = A reference to the array.
	&lt;element expN&gt;  - The element number.
	&lt;row/column expN&gt;  - A number, either 1 or 2, that determines whether you want
	to return the row or column subscript of an array.">
	<Param name="&lt;element expN&gt; "/>
	<Param name="&lt;row/column expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="substr" func="yes">
	<Overload retVal="{stringVal}" descr="Strings - 
		Returns a substring derived from a specified character string.">
		<Param name="&lt;expC&gt; "/>
		<Param name="&lt;start expN&gt; "/>
		<Param name="[&lt;length expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="substring" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns a substring derived from a specified character string.
	Property of: String
	Usage: &lt;expC&gt; .substring(&lt;index1 expN&gt; , &lt;index2 expN&gt; ) - 
	&lt;expC&gt;  = The string you want to extract characters from.
	&lt;index1 expN&gt;  - Indexes into the string, which is indexed from left to right. 
	The first character of the string is at index 0 .
	&lt;index2 expN&gt;  - and the last character is at index &lt;expC&gt; .length – 1.">
	<Param name="&lt;index1 expN&gt; "/>
	<Param name="&lt;index2 expN&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="LocalSQL - 
		SUBSTRING( ) to create a substring from a string.
		Usage: SUBSTRING(&lt;expC&gt;  FROM &lt;start expN&gt;  FOR &lt;length expN&gt; )">
		<Param name="&lt;expC&gt; "/>
		<Param name="FROM &lt;start expN&gt; "/>
		<Param name="FOR &lt;length expN&gt; )"/>
	</Overload>
</KeyWord>
<KeyWord name="sum" func="yes">
	<Overload retVal="{columnSum}" descr="LocalSQL - 
	Totals all numeric values in a column. See OLH for SUM() usage.">
		<Param name="&lt;column_name&gt; "/>
	</Overload>
	<Overload retVal="{}" descr="Xbase - Command - 
	Computes a total for specified numeric fields in the current table.
	See OLH for this command usage.">
		<Param name="[&lt;exp list&gt; ]"/>
		<Param name="[&lt;scope&gt; ]"/>
		<Param name="[FOR &lt;condition 1&gt; ]"/>
		<Param name="[WHILE &lt;condition 2&gt; ]"/>
		<Param name="[TO &lt;memvar list&gt;  | TO ARRAY &lt;array&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="suspend"/>
<KeyWord name="tableExists" func="yes">
	<Overload retVal="{lVal}" descr="Method - 
	Checks to see if a specified table exists in a database.
	Property of: Database
	Usage: &lt;oRef&gt; .tableExists(&lt;table name expC&gt; ) - 
	&lt;oRef&gt;  = The database in which to see if the table exists.
	&lt;table name expC&gt;  - The name of the table you want to look for.">
	<Param name="&lt;table name expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="tag" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the name of an open index.">
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="[&lt;index number expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="tagcount" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the number of active indexes in a specified work area
		or .MDX index file.">
		<Param name="[&lt;.mdx filename&gt;"/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="tagno" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns the index number of the specified index.">
		<Param name="[&lt;tag name expC&gt; "/>
		<Param name="[&lt;.mdx filename expC&gt;"/>
		<Param name="[&lt;alias&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="tan" func="yes">
	<Overload retVal="{nVal}" descr="Math/Money - 
		Returns the trigonometric tangent of an angle.">
		<Param name="&lt;expN&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="target" func="yes">
	<Overload retVal="{stringVal}" descr="Xbase - 
		Returns the name of a table linked with the SET RELATION command.">
		<Param name="&lt;expN&gt; "/>
		<Param name="[&lt;alias&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="terminate" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Terminates a conversation with a DDE server application.
	Property of: DDELink
	Usage: &lt;oRef&gt; .terminate() - 
	&lt;oRef&gt;  = A reference to the DDELink object whose connection to terminate.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="throw"/>
<KeyWord name="time" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns the time stamp for a file, the time the file was last modified.
	Property of: File
	Usage: &lt;oRef&gt; .time(&lt;filename expC&gt; ) - &lt;oRef&gt;  = A reference to a File object.
	&lt;filename expC&gt;  - The name of the file to check.">
	<Param name="&lt;filename expC&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Date and Time - 
		Returns the system time as a character string in HH:MM:SS or HH:MM:SS.hh format.">
		<Param name="[&lt;exp&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="toGMTString" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Converts the date into a string, using Internet (GMT) conventions.
	Property of: Date
	Usage: &lt;oRef&gt; .toGMTString() - &lt;oRef&gt;  = The Date object you want to convert.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="toLocaleString" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Converts the date into a string, using locale conventions.
	Property of: Date
	Usage: &lt;oRef&gt; .toLocaleString() - &lt;oRef&gt;  = The Date object you want to convert.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="toLowerCase" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Converts all uppercase characters in a string to lowercase and returns the resulting string.
	Property of: String
	Usage: &lt;expC&gt; .toLowerCase() - &lt;expC&gt;  = The string you want to convert to lowercase.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="toProperCase" func="yes">
	<Overload retVal="{stringVal}" descr="Method - Converts a character string
	to proper-noun format and returns the resulting string.
	Property of: String
	Usage: &lt;expC&gt; .toProperCase() - 
	&lt;expC&gt;  = The string you want to convert to proper-noun format.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="toString" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Converts the date into a string, using standard JavaScript conventions.
	Property of: Date, Number
	Usage: &lt;oRef&gt; .toString() - &lt;oRef&gt;  = The Date or Number object you want to convert.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="total"/>
<KeyWord name="toUpperCase" func="yes">
	<Overload retVal="{stringVal}" descr="Method - Converts all lowercase characters in
	a string to uppercase and returns the resulting string.
	Property of: String
	Usage: &lt;expC&gt; .toUpperCase( ) - &lt;expC&gt;  = The string you want to convert to uppercase.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="transform" func="yes">
	<Overload retVal="{stringVal}" descr="Strings - 
		Applies a formatting template to an expression, returning a formatted string.">
		<Param name="&lt;exp&gt; "/>
		<Param name="&lt;picture expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="trim" func="yes">
	<Overload retVal="{stringTrimmed}" descr="LocalSQL - 
		Removes repetitions of either spaces or a specified character from the
		left, right, or both sides of a string. See OLH for LocalSQL TRIM() usage.">
		<Param name="BOTH | LEADING | TRAILING"/>
		<Param name="&lt;char&gt; "/>
		<Param name="FROM &lt;expC&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
	Returns a string with no trailing space characters.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="try"/>
<KeyWord name="ttime" func="yes">
	<Overload retVal="{tVal}" descr="Date and Time - 
		Returns a value representing the current system time in the HH:MM:SS format.">
	</Overload>
</KeyWord>
<KeyWord name="ttoc" func="yes">
	<Overload retVal="{stringVal}" descr="Date and Time - 
		'Time to Character' converts a TTIME( ) value - your computer systems
		current time - to a literal string.">
		<Param name="&lt;tVar&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="type" func="yes">
	<Overload retVal="{stringType}" descr="Core Language - 
		Returns a character string that indicates a specified expression's data type.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Files and Operating Systems - Command - 
		Display the contents of a text file. See OLH for usage of the TYPE Command.">
		<Param name="&lt;filename 1&gt;  | ? | &lt;filename skeleton 1&gt; "/>
		<Param name="[MORE]"/>
		<Param name="[NUMBER]"/>
		<Param name="[TO FILE &lt;filename 2&gt;  | ? | &lt;filename skeleton 2&gt; ] | [TO PRINTER]"/>
	</Overload>
	<Overload retVal="{stringVal}" descr="OOP - Field - 
		The data type of the value stored in a field.">
		<Param name="name exptype"/>
	</Overload>
	<Overload retVal="{nVal}" descr="OOP - Parameter - 
		An enumerated value indicating the type of parameter.">
		<Param name="name exptype"/>
	</Overload>
</KeyWord>
<KeyWord name="unadvise" func="yes">
	<Overload retVal="{null}" descr="Method - Asks the server to stop
	notifying the client when an item in the server document changes.
	Property of: DDELink
	Usage: &lt;oRef&gt; .unadvise(&lt;item expC&gt; ) - 
	&lt;oRef&gt;  = A reference to the DDELink object that no longer wants notification.
	&lt;item expC&gt;  - The name of a topic item previously hot-linked using advise( ).">
	<Param name="&lt;item expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="undef" />
<KeyWord name="underlyingValue" func="yes">
	<Overload retVal="{null}" descr=" ADO Method - Returns the current value of a field.
		Property of: ADOField
		Usage: &lt;oRef&gt; .underlyingValue() - &lt;oRef&gt;  = Listed, not documented.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="undo" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Reverses the effects of the last Cut or Paste action.
	Property of: Browse, ComboBox, Editor, Entryfield, SpinBox
	Usage: &lt;oRef&gt; .undo() - 
	&lt;oRef&gt;  = An object reference to the control you want to restore.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="union"/>
<KeyWord name="unique" func="yes">
	<Overload retVal="{lVal}" descr="Xbase - 
		Indicates if a specified index ignores duplicate records.">
		<Param name="[&lt;.mdx filename expC&gt;]"/>
		<Param name="[&lt;index position expN&gt; "/>
		<Param name="[&lt;alias&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="unload" func="yes">
	<Overload retVal="{null}" descr="Method - Clears array from
	arrayRowset	and resets arrayRowset to an unused state. Listed,
	not fully documented.
	Property of: ArrayRowset
	Usage: &lt;oRef&gt; .unload() - &lt;oRef&gt;  = ArrayRowset referred to.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="unlock"/>
<KeyWord name="unlock" func="yes">
	<Overload retVal="{null}" descr="Method - Releases row and rowset locks.
	Property of: Rowset
	Usage: &lt;oRef&gt; .unlock() - &lt;oRef&gt;  = The rowset that contains the lock.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="unprepare" func="yes">
	<Overload retVal="{null}" descr="Method -
	Releases the server resources used by a query or stored procedure.
	Property of: Query, StoredProc
	Usage: This method is called implicitly by the Query or StoredProc object.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{null}" descr="ADO Method - Listed, not documented
		Property of: ADOCommand
		Usage: &lt;oRef&gt; .method() - &lt;oRef&gt;  = An object reference to the form.">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="update"/>
<KeyWord name="update" func="yes">
	<Overload retVal="{null}" descr="Method - 
	Updates existing rows in one rowset from another.
	Property of: UpdateSet
	Usage: &lt;oRef&gt; .update() - &lt;oRef&gt;  = The UpdateSet object that describes the update.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="updateBatch" func="yes">
	<Overload retVal="{null}" descr="ADO Method - Listed, not documented.
		Property of: ADOQuery
		Usage: &lt;oRef&gt; .updateBatch() - &lt;oRef&gt;  = .">
		<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="upper" func="yes">
	<Overload retVal="{stringVal}" descr="LocalSQL - 
		UPPER( ), to force a string to uppercase.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Strings - 
		Converts all lowercase characters in a string to uppercase
		and returns the resulting string.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="use"/>
<KeyWord name="user" func="yes">
	<Overload retVal="{stringVal}" descr="Method - 
	Returns the login name of the user currently logged in to the session.
	Property of: Session
	Usage: &lt;oRef&gt; .user() - &lt;oRef&gt;  = The session you want to check.">
	<Param name=""/>
	</Overload>
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns the login name of the user currently logged in to a protected system.">
	</Overload>
</KeyWord>
<KeyWord name="utc" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns time equivalent of the specified date/time parameters
		using GMT, in milliseconds.
		Usage: Date.UTC(&lt;year expN&gt; , &lt;month expN&gt; , &lt;day expN&gt; 
		[, &lt;hours expN&gt;  [, &lt;minutes expN&gt;  [, &lt;seconds expN&gt; ]]])">
		<Param name="&lt;year expN&gt; "/>
		<Param name="&lt;month expN&gt; "/>
		<Param name="&lt;day expN&gt; "/>
		<Param name="[&lt;hours expN&gt; "/>
		<Param name="[&lt;minutes expN&gt; "/>
		<Param name="[&lt;seconds expN&gt; ]]]"/>
	</Overload>
</KeyWord>
<KeyWord name="val" func="yes">
	<Overload retVal="{nVal}" descr="Strings - 
		Returns the number at the beginning of a character string.">
		<Param name="&lt;expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="validdrive" func="yes">
	<Overload retVal="{lVal}" descr="Files and Operating System - 
		Returns true if the specified drive exists and can be read.
		Returns false if the specified drive does not exist or cannot be read.">
		<Param name="&lt;drive expC&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="version" func="yes">
	<Overload retVal="{stringVal}" descr="Miscellaneous Language Elements - 
		Returns the name and version number of the currently
		running copy of dBASE or dBASE.">
		<Param name="[&lt;expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="visibleCount" func="yes">
	<Overload retVal="{nVal}" descr="Method - 
	Returns the number of tree items visible in the tree view area.
	Property of: TreeView
	Usage: &lt;oRef&gt; .visibleCount() - &lt;oRef&gt;  = The tree view to check.">
	<Param name=""/>
	</Overload>
</KeyWord>
<KeyWord name="where"/>
<KeyWord name="with"/>
<KeyWord name="workarea" func="yes">
	<Overload retVal="{nVal}" descr="Xbase - 
		Returns a number representing the currently selected work area.">
	</Overload>
</KeyWord>
<KeyWord name="write" func="yes">
	<Overload retVal="{nVal}" descr="Method - Writes a character string
	to a file previously opened with create( ) or open( ).
	Returns the number of characters written.
	Property of: File
	Usage: &lt;oRef&gt; .write(&lt;expC&gt;  [, &lt;characters expN&gt; ]) - 
	&lt;oRef&gt;  = A reference to the File object that created or opened the file.
	&lt;expC&gt;  - The character expression to write to the specified file.
	[&lt;characters expN&gt; ] - The number of characters of the specified character
	expression &lt;string expC&gt;  to write to the specified file, starting at the first
	character in &lt;string expC&gt; . If omitted, the entire string is written.">
	<Param name="&lt;expC&gt; "/>
	<Param name="[&lt;characters expN&gt; ]"/>
	</Overload>
</KeyWord>
<KeyWord name="writeln" func="yes">
	<Overload retVal="{nVal}" descr="Method - Writes a character string and one
	or two end-of-line characters to a file previously opened with create( ) or open( ).
	Returns the number of characters written.
	Property of: File
	Usage: &lt;oRef&gt; .writeln(&lt;string expC&gt;  [, &lt;characters expN&gt;  [, &lt;end-of-line expC&gt; ]]) - 
	&lt;oRef&gt;  = &lt;object referred to&gt; 
	&lt;string expC&gt;  - 
	[&lt;characters expN&gt;  - 
	[&lt;end-of-line expC&gt; ]] - ">
	<Param name="&lt;string expC&gt; "/>
	<Param name="[&lt;characters expN&gt; "/>
	<Param name="[&lt;end-of-line expC&gt; ]]"/>
	</Overload>
</KeyWord>
<KeyWord name="year" func="yes">
	<Overload retVal="{nVal}" descr="Date and Time - 
		Returns the year of a specified date.">
		<Param name="&lt;expD&gt; "/>
	</Overload>
</KeyWord>
<KeyWord name="zap"/>
	</AutoComplete>
</NotepadPlus>

